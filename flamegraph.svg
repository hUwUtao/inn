<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="917.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="917.00"> </text><svg id="frames" x="10" width="1180" total_samples="66"><g><title>`0x7FF9FCC85A20 (1 samples, 1.52%)</title><rect x="0.0000%" y="869" width="1.5152%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="879.50"></text></g><g><title>`0x7FF9FCC50669 (1 samples, 1.52%)</title><rect x="1.5152%" y="821" width="1.5152%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="1.7652%" y="831.50"></text></g><g><title>`0x7FF9FCC4FDFF (1 samples, 1.52%)</title><rect x="1.5152%" y="805" width="1.5152%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="1.7652%" y="815.50"></text></g><g><title>`0x7FF9FCD625E4 (1 samples, 1.52%)</title><rect x="1.5152%" y="789" width="1.5152%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="1.7652%" y="799.50"></text></g><g><title>`0x7FF9FCC545AC (1 samples, 1.52%)</title><rect x="3.0303%" y="789" width="1.5152%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="3.2803%" y="799.50"></text></g><g><title>`0x7FF9FCC52221 (3 samples, 4.55%)</title><rect x="1.5152%" y="837" width="4.5455%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="3"/><text x="1.7652%" y="847.50">`0x7F..</text></g><g><title>`0x7FF9FCC50877 (2 samples, 3.03%)</title><rect x="3.0303%" y="821" width="3.0303%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="2"/><text x="3.2803%" y="831.50">`0x..</text></g><g><title>`0x7FF9FCC04351 (2 samples, 3.03%)</title><rect x="3.0303%" y="805" width="3.0303%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="2"/><text x="3.2803%" y="815.50">`0x..</text></g><g><title>`0x7FF9FCC54AD0 (1 samples, 1.52%)</title><rect x="4.5455%" y="789" width="1.5152%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="1"/><text x="4.7955%" y="799.50"></text></g><g><title>`0x7FF9FA63F356 (1 samples, 1.52%)</title><rect x="6.0606%" y="821" width="1.5152%" height="15" fill="rgb(220,122,19)" fg:x="4" fg:w="1"/><text x="6.3106%" y="831.50"></text></g><g><title>stmt-75d513914b7607b8.exe`pre_cpp_initialization() (1 samples, 1.52%)</title><rect x="6.0606%" y="805" width="1.5152%" height="15" fill="rgb(250,228,42)" fg:x="4" fg:w="1"/><text x="6.3106%" y="815.50"></text></g><g><title>`0x7FF9FA3030D8 (1 samples, 1.52%)</title><rect x="6.0606%" y="789" width="1.5152%" height="15" fill="rgb(240,193,28)" fg:x="4" fg:w="1"/><text x="6.3106%" y="799.50"></text></g><g><title>`0x7FF9FA30328B (1 samples, 1.52%)</title><rect x="6.0606%" y="773" width="1.5152%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="1"/><text x="6.3106%" y="783.50"></text></g><g><title>`0x7FF9FCD5FA94 (1 samples, 1.52%)</title><rect x="6.0606%" y="757" width="1.5152%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="1"/><text x="6.3106%" y="767.50"></text></g><g><title>`0x7FF9FA6704EA (1 samples, 1.52%)</title><rect x="7.5758%" y="821" width="1.5152%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="1"/><text x="7.8258%" y="831.50"></text></g><g><title>`0x7FF9FA654E1B (1 samples, 1.52%)</title><rect x="7.5758%" y="805" width="1.5152%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="1"/><text x="7.8258%" y="815.50"></text></g><g><title>`0x7FF9FA654E89 (1 samples, 1.52%)</title><rect x="7.5758%" y="789" width="1.5152%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="1"/><text x="7.8258%" y="799.50"></text></g><g><title>`0x7FF9FA5ECDA0 (1 samples, 1.52%)</title><rect x="7.5758%" y="773" width="1.5152%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="1"/><text x="7.8258%" y="783.50"></text></g><g><title>`0x7FF9FCC0884E (1 samples, 1.52%)</title><rect x="9.0909%" y="645" width="1.5152%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="1"/><text x="9.3409%" y="655.50"></text></g><g><title>`0x7FF9FCC08D1A (1 samples, 1.52%)</title><rect x="9.0909%" y="629" width="1.5152%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="1"/><text x="9.3409%" y="639.50"></text></g><g><title>`0x7FF9FCD5FB34 (1 samples, 1.52%)</title><rect x="9.0909%" y="613" width="1.5152%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="1"/><text x="9.3409%" y="623.50"></text></g><g><title>`0x7FF9FCC4C61E (1 samples, 1.52%)</title><rect x="10.6061%" y="629" width="1.5152%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="1"/><text x="10.8561%" y="639.50"></text></g><g><title>`0x7FF9FCC4E3DC (1 samples, 1.52%)</title><rect x="10.6061%" y="613" width="1.5152%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="1"/><text x="10.8561%" y="623.50"></text></g><g><title>`0x7FF9FCC070E1 (1 samples, 1.52%)</title><rect x="10.6061%" y="597" width="1.5152%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="1"/><text x="10.8561%" y="607.50"></text></g><g><title>`0x7FF9FCC0884E (1 samples, 1.52%)</title><rect x="10.6061%" y="581" width="1.5152%" height="15" fill="rgb(241,131,45)" fg:x="7" fg:w="1"/><text x="10.8561%" y="591.50"></text></g><g><title>`0x7FF9FCC08D1A (1 samples, 1.52%)</title><rect x="10.6061%" y="565" width="1.5152%" height="15" fill="rgb(249,31,29)" fg:x="7" fg:w="1"/><text x="10.8561%" y="575.50"></text></g><g><title>`0x7FF9FCD5FB34 (1 samples, 1.52%)</title><rect x="10.6061%" y="549" width="1.5152%" height="15" fill="rgb(225,111,53)" fg:x="7" fg:w="1"/><text x="10.8561%" y="559.50"></text></g><g><title>`0x7FF9FCC4B050 (3 samples, 4.55%)</title><rect x="9.0909%" y="709" width="4.5455%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="3"/><text x="9.3409%" y="719.50">`0x7F..</text></g><g><title>`0x7FF9FCC04364 (3 samples, 4.55%)</title><rect x="9.0909%" y="693" width="4.5455%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="3"/><text x="9.3409%" y="703.50">`0x7F..</text></g><g><title>`0x7FF9FCC0494D (3 samples, 4.55%)</title><rect x="9.0909%" y="677" width="4.5455%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="3"/><text x="9.3409%" y="687.50">`0x7F..</text></g><g><title>`0x7FF9FCC05A9C (3 samples, 4.55%)</title><rect x="9.0909%" y="661" width="4.5455%" height="15" fill="rgb(209,103,24)" fg:x="6" fg:w="3"/><text x="9.3409%" y="671.50">`0x7F..</text></g><g><title>`0x7FF9FCC08999 (2 samples, 3.03%)</title><rect x="10.6061%" y="645" width="3.0303%" height="15" fill="rgb(229,88,8)" fg:x="7" fg:w="2"/><text x="10.8561%" y="655.50">`0x..</text></g><g><title>`0x7FF9FCC4C792 (1 samples, 1.52%)</title><rect x="12.1212%" y="629" width="1.5152%" height="15" fill="rgb(213,181,19)" fg:x="8" fg:w="1"/><text x="12.3712%" y="639.50"></text></g><g><title>`0x7FF9FCC545EE (1 samples, 1.52%)</title><rect x="12.1212%" y="613" width="1.5152%" height="15" fill="rgb(254,191,54)" fg:x="8" fg:w="1"/><text x="12.3712%" y="623.50"></text></g><g><title>`0x7FF9FA6704F6 (4 samples, 6.06%)</title><rect x="9.0909%" y="821" width="6.0606%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="4"/><text x="9.3409%" y="831.50">`0x7FF9F..</text></g><g><title>`0x7FF9FA65586D (4 samples, 6.06%)</title><rect x="9.0909%" y="805" width="6.0606%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="4"/><text x="9.3409%" y="815.50">`0x7FF9F..</text></g><g><title>`0x7FF9FA5F710B (4 samples, 6.06%)</title><rect x="9.0909%" y="789" width="6.0606%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="4"/><text x="9.3409%" y="799.50">`0x7FF9F..</text></g><g><title>`0x7FF9FA647BF9 (4 samples, 6.06%)</title><rect x="9.0909%" y="773" width="6.0606%" height="15" fill="rgb(245,192,40)" fg:x="6" fg:w="4"/><text x="9.3409%" y="783.50">`0x7FF9F..</text></g><g><title>`0x7FF9FA221C56 (4 samples, 6.06%)</title><rect x="9.0909%" y="757" width="6.0606%" height="15" fill="rgb(238,167,29)" fg:x="6" fg:w="4"/><text x="9.3409%" y="767.50">`0x7FF9F..</text></g><g><title>`0x7FF9FCC566C0 (4 samples, 6.06%)</title><rect x="9.0909%" y="741" width="6.0606%" height="15" fill="rgb(232,182,51)" fg:x="6" fg:w="4"/><text x="9.3409%" y="751.50">`0x7FF9F..</text></g><g><title>`0x7FF9FCC4ACD0 (4 samples, 6.06%)</title><rect x="9.0909%" y="725" width="6.0606%" height="15" fill="rgb(231,60,39)" fg:x="6" fg:w="4"/><text x="9.3409%" y="735.50">`0x7FF9F..</text></g><g><title>`0x7FF9FCC4B0C4 (1 samples, 1.52%)</title><rect x="13.6364%" y="709" width="1.5152%" height="15" fill="rgb(208,69,12)" fg:x="9" fg:w="1"/><text x="13.8864%" y="719.50"></text></g><g><title>`0x7FF9FCCD2F93 (1 samples, 1.52%)</title><rect x="13.6364%" y="693" width="1.5152%" height="15" fill="rgb(235,93,37)" fg:x="9" fg:w="1"/><text x="13.8864%" y="703.50"></text></g><g><title>`0x7FF9FCCD32D6 (1 samples, 1.52%)</title><rect x="13.6364%" y="677" width="1.5152%" height="15" fill="rgb(213,116,39)" fg:x="9" fg:w="1"/><text x="13.8864%" y="687.50"></text></g><g><title>`0x7FF9FCCD32AA (1 samples, 1.52%)</title><rect x="13.6364%" y="661" width="1.5152%" height="15" fill="rgb(222,207,29)" fg:x="9" fg:w="1"/><text x="13.8864%" y="671.50"></text></g><g><title>`0x7FF9FCC1CC0C (1 samples, 1.52%)</title><rect x="13.6364%" y="645" width="1.5152%" height="15" fill="rgb(206,96,30)" fg:x="9" fg:w="1"/><text x="13.8864%" y="655.50"></text></g><g><title>`0x7FF9FCC1D860 (1 samples, 1.52%)</title><rect x="13.6364%" y="629" width="1.5152%" height="15" fill="rgb(218,138,4)" fg:x="9" fg:w="1"/><text x="13.8864%" y="639.50"></text></g><g><title>`0x7FF9FC757ABF (1 samples, 1.52%)</title><rect x="13.6364%" y="613" width="1.5152%" height="15" fill="rgb(250,191,14)" fg:x="9" fg:w="1"/><text x="13.8864%" y="623.50"></text></g><g><title>`0x7FF9FC774772 (1 samples, 1.52%)</title><rect x="13.6364%" y="597" width="1.5152%" height="15" fill="rgb(239,60,40)" fg:x="9" fg:w="1"/><text x="13.8864%" y="607.50"></text></g><g><title>`0x7FF9FC7748E0 (1 samples, 1.52%)</title><rect x="13.6364%" y="581" width="1.5152%" height="15" fill="rgb(206,27,48)" fg:x="9" fg:w="1"/><text x="13.8864%" y="591.50"></text></g><g><title>`0x7FF9FC76D8AB (1 samples, 1.52%)</title><rect x="13.6364%" y="565" width="1.5152%" height="15" fill="rgb(225,35,8)" fg:x="9" fg:w="1"/><text x="13.8864%" y="575.50"></text></g><g><title>`0x7FF9FC76D6C0 (1 samples, 1.52%)</title><rect x="13.6364%" y="549" width="1.5152%" height="15" fill="rgb(250,213,24)" fg:x="9" fg:w="1"/><text x="13.8864%" y="559.50"></text></g><g><title>`0x7FF9FCC27776 (1 samples, 1.52%)</title><rect x="13.6364%" y="533" width="1.5152%" height="15" fill="rgb(247,123,22)" fg:x="9" fg:w="1"/><text x="13.8864%" y="543.50"></text></g><g><title>`0x7FF9FCC27AFE (1 samples, 1.52%)</title><rect x="13.6364%" y="517" width="1.5152%" height="15" fill="rgb(231,138,38)" fg:x="9" fg:w="1"/><text x="13.8864%" y="527.50"></text></g><g><title>`0x7FF9FCC0F6C7 (1 samples, 1.52%)</title><rect x="13.6364%" y="501" width="1.5152%" height="15" fill="rgb(231,145,46)" fg:x="9" fg:w="1"/><text x="13.8864%" y="511.50"></text></g><g><title>`0x7FF9FCC11B6F (1 samples, 1.52%)</title><rect x="13.6364%" y="485" width="1.5152%" height="15" fill="rgb(251,118,11)" fg:x="9" fg:w="1"/><text x="13.8864%" y="495.50"></text></g><g><title>`0x7FF9FCC13563 (1 samples, 1.52%)</title><rect x="13.6364%" y="469" width="1.5152%" height="15" fill="rgb(217,147,25)" fg:x="9" fg:w="1"/><text x="13.8864%" y="479.50"></text></g><g><title>`0x7FF9FCC13A9D (1 samples, 1.52%)</title><rect x="13.6364%" y="453" width="1.5152%" height="15" fill="rgb(247,81,37)" fg:x="9" fg:w="1"/><text x="13.8864%" y="463.50"></text></g><g><title>`0x7FF9FCCA3735 (1 samples, 1.52%)</title><rect x="13.6364%" y="437" width="1.5152%" height="15" fill="rgb(209,12,38)" fg:x="9" fg:w="1"/><text x="13.8864%" y="447.50"></text></g><g><title>`0x7FF9FCC9C6BF (1 samples, 1.52%)</title><rect x="13.6364%" y="421" width="1.5152%" height="15" fill="rgb(227,1,9)" fg:x="9" fg:w="1"/><text x="13.8864%" y="431.50"></text></g><g><title>`0x7FF9FCD5F874 (1 samples, 1.52%)</title><rect x="13.6364%" y="405" width="1.5152%" height="15" fill="rgb(248,47,43)" fg:x="9" fg:w="1"/><text x="13.8864%" y="415.50"></text></g><g><title>`0x7FF9FA670543 (1 samples, 1.52%)</title><rect x="15.1515%" y="821" width="1.5152%" height="15" fill="rgb(221,10,30)" fg:x="10" fg:w="1"/><text x="15.4015%" y="831.50"></text></g><g><title>`0x7FF9FB7E1F9B (1 samples, 1.52%)</title><rect x="15.1515%" y="805" width="1.5152%" height="15" fill="rgb(210,229,1)" fg:x="10" fg:w="1"/><text x="15.4015%" y="815.50"></text></g><g><title>`0x7FF9FCC85C04 (1 samples, 1.52%)</title><rect x="15.1515%" y="789" width="1.5152%" height="15" fill="rgb(222,148,37)" fg:x="10" fg:w="1"/><text x="15.4015%" y="799.50"></text></g><g><title>`0x7FF9FCC86A40 (1 samples, 1.52%)</title><rect x="15.1515%" y="773" width="1.5152%" height="15" fill="rgb(234,67,33)" fg:x="10" fg:w="1"/><text x="15.4015%" y="783.50"></text></g><g><title>`0x7FF9FCC1D860 (1 samples, 1.52%)</title><rect x="15.1515%" y="757" width="1.5152%" height="15" fill="rgb(247,98,35)" fg:x="10" fg:w="1"/><text x="15.4015%" y="767.50"></text></g><g><title>`0x7FF9FC757B0D (1 samples, 1.52%)</title><rect x="15.1515%" y="741" width="1.5152%" height="15" fill="rgb(247,138,52)" fg:x="10" fg:w="1"/><text x="15.4015%" y="751.50"></text></g><g><title>`0x7FF9FC78E2E7 (1 samples, 1.52%)</title><rect x="15.1515%" y="725" width="1.5152%" height="15" fill="rgb(213,79,30)" fg:x="10" fg:w="1"/><text x="15.4015%" y="735.50"></text></g><g><title>`0x7FF9FC78E6B2 (1 samples, 1.52%)</title><rect x="15.1515%" y="709" width="1.5152%" height="15" fill="rgb(246,177,23)" fg:x="10" fg:w="1"/><text x="15.4015%" y="719.50"></text></g><g><title>`0x7FF9FC7910C7 (1 samples, 1.52%)</title><rect x="15.1515%" y="693" width="1.5152%" height="15" fill="rgb(230,62,27)" fg:x="10" fg:w="1"/><text x="15.4015%" y="703.50"></text></g><g><title>`0x7FF9FC79B270 (1 samples, 1.52%)</title><rect x="15.1515%" y="677" width="1.5152%" height="15" fill="rgb(216,154,8)" fg:x="10" fg:w="1"/><text x="15.4015%" y="687.50"></text></g><g><title>stmt-75d513914b7607b8.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::configure_from_args&lt;criterion::measurement::WallTime&gt;(criterion::Criterion (1 samples, 1.52%)</title><rect x="16.6667%" y="645" width="1.5152%" height="15" fill="rgb(244,35,45)" fg:x="11" fg:w="1"/><text x="16.9167%" y="655.50"></text></g><g><title>stmt-75d513914b7607b8.exe`enum2$&lt;core::option::Option&lt;std::sync::mutex::MutexGuard&lt;criterion::connection::Connection&gt; &gt; &gt;::is_some (1 samples, 1.52%)</title><rect x="16.6667%" y="629" width="1.5152%" height="15" fill="rgb(251,115,12)" fg:x="11" fg:w="1"/><text x="16.9167%" y="639.50"></text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::builder::command::Command::get_matches_from&lt;std::env::ArgsOs,std::ffi::os_str::OsString&gt; (1 samples, 1.52%)</title><rect x="16.6667%" y="613" width="1.5152%" height="15" fill="rgb(240,54,50)" fg:x="11" fg:w="1"/><text x="16.9167%" y="623.50"></text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::builder::command::Command::try_get_matches_from_mut (1 samples, 1.52%)</title><rect x="16.6667%" y="597" width="1.5152%" height="15" fill="rgb(233,84,52)" fg:x="11" fg:w="1"/><text x="16.9167%" y="607.50"></text></g><g><title>stmt-75d513914b7607b8.exe`core::ptr::drop_in_place (1 samples, 1.52%)</title><rect x="16.6667%" y="581" width="1.5152%" height="15" fill="rgb(207,117,47)" fg:x="11" fg:w="1"/><text x="16.9167%" y="591.50"></text></g><g><title>stmt-75d513914b7607b8.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 1.52%)</title><rect x="16.6667%" y="565" width="1.5152%" height="15" fill="rgb(249,43,39)" fg:x="11" fg:w="1"/><text x="16.9167%" y="575.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (1 samples, 1.52%)</title><rect x="16.6667%" y="549" width="1.5152%" height="15" fill="rgb(209,38,44)" fg:x="11" fg:w="1"/><text x="16.9167%" y="559.50"></text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::builder::command::Command::_do_parse (1 samples, 1.52%)</title><rect x="16.6667%" y="533" width="1.5152%" height="15" fill="rgb(236,212,23)" fg:x="11" fg:w="1"/><text x="16.9167%" y="543.50"></text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::parser::parser::Parser::get_matches_with (1 samples, 1.52%)</title><rect x="16.6667%" y="517" width="1.5152%" height="15" fill="rgb(242,79,21)" fg:x="11" fg:w="1"/><text x="16.9167%" y="527.50"></text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::parser::parser::Parser::add_defaults (1 samples, 1.52%)</title><rect x="16.6667%" y="501" width="1.5152%" height="15" fill="rgb(211,96,35)" fg:x="11" fg:w="1"/><text x="16.9167%" y="511.50"></text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::parser::parser::Parser::add_default_value (1 samples, 1.52%)</title><rect x="16.6667%" y="485" width="1.5152%" height="15" fill="rgb(253,215,40)" fg:x="11" fg:w="1"/><text x="16.9167%" y="495.50"></text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::parser::parser::Parser::react(enum2$&lt;core::option::Option&lt;clap_builder::parser::parser::Identifier&gt; &gt;, clap_builder::parser::matches::value_source::ValueSource, clap_builder::builder::arg::Arg*, alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;, enum2$&lt;core::option::Option (1 samples, 1.52%)</title><rect x="16.6667%" y="469" width="1.5152%" height="15" fill="rgb(211,81,21)" fg:x="11" fg:w="1"/><text x="16.9167%" y="479.50"></text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::parser::parser::Parser::start_custom_arg (1 samples, 1.52%)</title><rect x="16.6667%" y="453" width="1.5152%" height="15" fill="rgb(208,190,38)" fg:x="11" fg:w="1"/><text x="16.9167%" y="463.50"></text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::parser::matches::value_source::ValueSource::is_explicit (1 samples, 1.52%)</title><rect x="16.6667%" y="437" width="1.5152%" height="15" fill="rgb(235,213,38)" fg:x="11" fg:w="1"/><text x="16.9167%" y="447.50"></text></g><g><title>stmt-75d513914b7607b8.exe`core::cmp::PartialEq::ne (1 samples, 1.52%)</title><rect x="16.6667%" y="421" width="1.5152%" height="15" fill="rgb(237,122,38)" fg:x="11" fg:w="1"/><text x="16.9167%" y="431.50"></text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::parser::matches::value_source::impl$5::eq (1 samples, 1.52%)</title><rect x="16.6667%" y="405" width="1.5152%" height="15" fill="rgb(244,218,35)" fg:x="11" fg:w="1"/><text x="16.9167%" y="415.50"></text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::parser::arg_matcher::ArgMatcher::start_custom_arg (1 samples, 1.52%)</title><rect x="16.6667%" y="389" width="1.5152%" height="15" fill="rgb(240,68,47)" fg:x="11" fg:w="1"/><text x="16.9167%" y="399.50"></text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::parser::matches::matched_arg::MatchedArg::set_source (1 samples, 1.52%)</title><rect x="16.6667%" y="373" width="1.5152%" height="15" fill="rgb(210,16,53)" fg:x="11" fg:w="1"/><text x="16.9167%" y="383.50"></text></g><g><title>stmt-75d513914b7607b8.exe`enum2$&lt;clap_builder::util::flat_map::Entry&lt;clap_builder::util::id::Id,clap_builder::parser::matches::matched_arg::MatchedArg&gt; &gt;::or_insert&lt;clap_builder::util::id::Id,clap_builder::parser::matches::matched_arg::MatchedArg&gt;(enum2$&lt;clap_builder::util::flat_map::Entry (1 samples, 1.52%)</title><rect x="16.6667%" y="357" width="1.5152%" height="15" fill="rgb(235,124,12)" fg:x="11" fg:w="1"/><text x="16.9167%" y="367.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::vec::Vec&lt;clap_builder::parser::matches::matched_arg::MatchedArg,alloc::alloc::Global&gt;::push (1 samples, 1.52%)</title><rect x="16.6667%" y="341" width="1.5152%" height="15" fill="rgb(224,169,11)" fg:x="11" fg:w="1"/><text x="16.9167%" y="351.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::vec::Vec&lt;clap_builder::parser::matches::matched_arg::MatchedArg,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 1.52%)</title><rect x="16.6667%" y="325" width="1.5152%" height="15" fill="rgb(250,166,2)" fg:x="11" fg:w="1"/><text x="16.9167%" y="335.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::raw_vec::RawVec&lt;clap_builder::parser::matches::matched_arg::MatchedArg,alloc::alloc::Global&gt;::ptr (1 samples, 1.52%)</title><rect x="16.6667%" y="309" width="1.5152%" height="15" fill="rgb(242,216,29)" fg:x="11" fg:w="1"/><text x="16.9167%" y="319.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 1.52%)</title><rect x="16.6667%" y="293" width="1.5152%" height="15" fill="rgb(230,116,27)" fg:x="11" fg:w="1"/><text x="16.9167%" y="303.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 1.52%)</title><rect x="16.6667%" y="277" width="1.5152%" height="15" fill="rgb(228,99,48)" fg:x="11" fg:w="1"/><text x="16.9167%" y="287.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::raw_vec::RawVec&lt;clap_builder::parser::matches::matched_arg::MatchedArg,alloc::alloc::Global&gt;::grow_one&lt;clap_builder::parser::matches::matched_arg::MatchedArg,alloc::alloc::Global&gt; (1 samples, 1.52%)</title><rect x="16.6667%" y="261" width="1.5152%" height="15" fill="rgb(253,11,6)" fg:x="11" fg:w="1"/><text x="16.9167%" y="271.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 1.52%)</title><rect x="16.6667%" y="245" width="1.5152%" height="15" fill="rgb(247,143,39)" fg:x="11" fg:w="1"/><text x="16.9167%" y="255.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 1.52%)</title><rect x="16.6667%" y="229" width="1.5152%" height="15" fill="rgb(236,97,10)" fg:x="11" fg:w="1"/><text x="16.9167%" y="239.50"></text></g><g><title>stmt-75d513914b7607b8.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 1.52%)</title><rect x="16.6667%" y="213" width="1.5152%" height="15" fill="rgb(233,208,19)" fg:x="11" fg:w="1"/><text x="16.9167%" y="223.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 1.52%)</title><rect x="16.6667%" y="197" width="1.5152%" height="15" fill="rgb(216,164,2)" fg:x="11" fg:w="1"/><text x="16.9167%" y="207.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 1.52%)</title><rect x="16.6667%" y="181" width="1.5152%" height="15" fill="rgb(220,129,5)" fg:x="11" fg:w="1"/><text x="16.9167%" y="191.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 1.52%)</title><rect x="16.6667%" y="165" width="1.5152%" height="15" fill="rgb(242,17,10)" fg:x="11" fg:w="1"/><text x="16.9167%" y="175.50"></text></g><g><title>stmt-75d513914b7607b8.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 1.52%)</title><rect x="16.6667%" y="149" width="1.5152%" height="15" fill="rgb(242,107,0)" fg:x="11" fg:w="1"/><text x="16.9167%" y="159.50"></text></g><g><title>`0x7FF9FCC35376 (1 samples, 1.52%)</title><rect x="16.6667%" y="133" width="1.5152%" height="15" fill="rgb(251,28,31)" fg:x="11" fg:w="1"/><text x="16.9167%" y="143.50"></text></g><g><title>`0x7FF9FCC354B5 (1 samples, 1.52%)</title><rect x="16.6667%" y="117" width="1.5152%" height="15" fill="rgb(233,223,10)" fg:x="11" fg:w="1"/><text x="16.9167%" y="127.50"></text></g><g><title>`0x7FF9FCC3646C (1 samples, 1.52%)</title><rect x="16.6667%" y="101" width="1.5152%" height="15" fill="rgb(215,21,27)" fg:x="11" fg:w="1"/><text x="16.9167%" y="111.50"></text></g><g><title>`0x7FF9FCC32871 (1 samples, 1.52%)</title><rect x="16.6667%" y="85" width="1.5152%" height="15" fill="rgb(232,23,21)" fg:x="11" fg:w="1"/><text x="16.9167%" y="95.50"></text></g><g><title>`0x7FF9FCC2AC74 (1 samples, 1.52%)</title><rect x="16.6667%" y="69" width="1.5152%" height="15" fill="rgb(244,5,23)" fg:x="11" fg:w="1"/><text x="16.9167%" y="79.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 1.52%)</title><rect x="19.6970%" y="373" width="1.5152%" height="15" fill="rgb(226,81,46)" fg:x="13" fg:w="1"/><text x="19.9470%" y="383.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::process::search_paths::closure$2 (1 samples, 1.52%)</title><rect x="19.6970%" y="357" width="1.5152%" height="15" fill="rgb(247,70,30)" fg:x="13" fg:w="1"/><text x="19.9470%" y="367.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::process::resolve_exe::closure$0 (1 samples, 1.52%)</title><rect x="19.6970%" y="341" width="1.5152%" height="15" fill="rgb(212,68,19)" fg:x="13" fg:w="1"/><text x="19.9470%" y="351.50"></text></g><g><title>stmt-75d513914b7607b8.exe`core::ptr::drop_in_place (1 samples, 1.52%)</title><rect x="19.6970%" y="325" width="1.5152%" height="15" fill="rgb(240,187,13)" fg:x="13" fg:w="1"/><text x="19.9470%" y="335.50"></text></g><g><title>stmt-75d513914b7607b8.exe`core::ptr::drop_in_place (1 samples, 1.52%)</title><rect x="19.6970%" y="309" width="1.5152%" height="15" fill="rgb(223,113,26)" fg:x="13" fg:w="1"/><text x="19.9470%" y="319.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::process::program_exists (1 samples, 1.52%)</title><rect x="19.6970%" y="293" width="1.5152%" height="15" fill="rgb(206,192,2)" fg:x="13" fg:w="1"/><text x="19.9470%" y="303.50"></text></g><g><title>`0x7FF9FA295FC9 (1 samples, 1.52%)</title><rect x="19.6970%" y="277" width="1.5152%" height="15" fill="rgb(241,108,4)" fg:x="13" fg:w="1"/><text x="19.9470%" y="287.50"></text></g><g><title>`0x7FF9FCD5FDD4 (1 samples, 1.52%)</title><rect x="19.6970%" y="261" width="1.5152%" height="15" fill="rgb(247,173,49)" fg:x="13" fg:w="1"/><text x="19.9470%" y="271.50"></text></g><g><title>stmt-75d513914b7607b8.exe`once_cell::imp::OnceCell&lt;criterion::PlottingBackend&gt;::initialize&lt;criterion::PlottingBackend,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$11::force::closure_env$0&lt;criterion::PlottingBackend,criterion::PlottingBackend (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$11::force::closure_env$0&lt;criterion::PlottingBackend,criterion::PlottingBackend (*) (6 samples, 9.09%)</title><rect x="18.1818%" y="613" width="9.0909%" height="15" fill="rgb(224,114,35)" fg:x="12" fg:w="6"/><text x="18.4318%" y="623.50">stmt-75d51391..</text></g><g><title>stmt-75d513914b7607b8.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (6 samples, 9.09%)</title><rect x="18.1818%" y="597" width="9.0909%" height="15" fill="rgb(245,159,27)" fg:x="12" fg:w="6"/><text x="18.4318%" y="607.50">stmt-75d51391..</text></g><g><title>stmt-75d513914b7607b8.exe`once_cell::imp::impl$4::initialize::closure$0&lt;criterion::PlottingBackend,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$11::force::closure_env$0&lt;criterion::PlottingBackend,criterion::PlottingBackend (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$11::force::closure_env$0&lt;criterion::PlottingBackend,criterion::PlottingBackend (*)()&gt; &gt;,enum2$ (6 samples, 9.09%)</title><rect x="18.1818%" y="581" width="9.0909%" height="15" fill="rgb(245,172,44)" fg:x="12" fg:w="6"/><text x="18.4318%" y="591.50">stmt-75d51391..</text></g><g><title>stmt-75d513914b7607b8.exe`core::ops::function::FnOnce::call_once&lt;criterion::DEFAULT_PLOTTING_BACKEND::closure_env$0,tuple$&lt;&gt; &gt; (6 samples, 9.09%)</title><rect x="18.1818%" y="565" width="9.0909%" height="15" fill="rgb(236,23,11)" fg:x="12" fg:w="6"/><text x="18.4318%" y="575.50">stmt-75d51391..</text></g><g><title>stmt-75d513914b7607b8.exe`criterion::DEFAULT_PLOTTING_BACKEND::closure$0 (6 samples, 9.09%)</title><rect x="18.1818%" y="549" width="9.0909%" height="15" fill="rgb(205,117,38)" fg:x="12" fg:w="6"/><text x="18.4318%" y="559.50">stmt-75d51391..</text></g><g><title>stmt-75d513914b7607b8.exe`once_cell::imp::OnceCell&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; &gt;::initialize&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$11::force::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$11::force::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; (*) (6 samples, 9.09%)</title><rect x="18.1818%" y="533" width="9.0909%" height="15" fill="rgb(237,72,25)" fg:x="12" fg:w="6"/><text x="18.4318%" y="543.50">stmt-75d51391..</text></g><g><title>stmt-75d513914b7607b8.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (6 samples, 9.09%)</title><rect x="18.1818%" y="517" width="9.0909%" height="15" fill="rgb(244,70,9)" fg:x="12" fg:w="6"/><text x="18.4318%" y="527.50">stmt-75d51391..</text></g><g><title>stmt-75d513914b7607b8.exe`once_cell::imp::impl$4::initialize::closure$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$11::force::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$11::force::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; (*)()&gt; &gt;,enum2$ (6 samples, 9.09%)</title><rect x="18.1818%" y="501" width="9.0909%" height="15" fill="rgb(217,125,39)" fg:x="12" fg:w="6"/><text x="18.4318%" y="511.50">stmt-75d51391..</text></g><g><title>stmt-75d513914b7607b8.exe`criterion_plot::version (6 samples, 9.09%)</title><rect x="18.1818%" y="485" width="9.0909%" height="15" fill="rgb(235,36,10)" fg:x="12" fg:w="6"/><text x="18.4318%" y="495.50">stmt-75d51391..</text></g><g><title>stmt-75d513914b7607b8.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;, enum2$&lt;criterion_plot::VersionError&gt; (*) (6 samples, 9.09%)</title><rect x="18.1818%" y="469" width="9.0909%" height="15" fill="rgb(251,123,47)" fg:x="12" fg:w="6"/><text x="18.4318%" y="479.50">stmt-75d51391..</text></g><g><title>stmt-75d513914b7607b8.exe`std::process::Command::output (6 samples, 9.09%)</title><rect x="18.1818%" y="453" width="9.0909%" height="15" fill="rgb(221,13,13)" fg:x="12" fg:w="6"/><text x="18.4318%" y="463.50">stmt-75d51391..</text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::process::Command::output (6 samples, 9.09%)</title><rect x="18.1818%" y="437" width="9.0909%" height="15" fill="rgb(238,131,9)" fg:x="12" fg:w="6"/><text x="18.4318%" y="447.50">stmt-75d51391..</text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::process::Command::spawn (6 samples, 9.09%)</title><rect x="18.1818%" y="421" width="9.0909%" height="15" fill="rgb(211,50,8)" fg:x="12" fg:w="6"/><text x="18.4318%" y="431.50">stmt-75d51391..</text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::process::resolve_exe (6 samples, 9.09%)</title><rect x="18.1818%" y="405" width="9.0909%" height="15" fill="rgb(245,182,24)" fg:x="12" fg:w="6"/><text x="18.4318%" y="415.50">stmt-75d51391..</text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::process::search_paths (6 samples, 9.09%)</title><rect x="18.1818%" y="389" width="9.0909%" height="15" fill="rgb(242,14,37)" fg:x="12" fg:w="6"/><text x="18.4318%" y="399.50">stmt-75d51391..</text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::process::resolve_exe::closure$0 (4 samples, 6.06%)</title><rect x="21.2121%" y="373" width="6.0606%" height="15" fill="rgb(246,228,12)" fg:x="14" fg:w="4"/><text x="21.4621%" y="383.50">stmt-75d..</text></g><g><title>stmt-75d513914b7607b8.exe`core::ptr::drop_in_place (4 samples, 6.06%)</title><rect x="21.2121%" y="357" width="6.0606%" height="15" fill="rgb(213,55,15)" fg:x="14" fg:w="4"/><text x="21.4621%" y="367.50">stmt-75d..</text></g><g><title>stmt-75d513914b7607b8.exe`core::ptr::drop_in_place (4 samples, 6.06%)</title><rect x="21.2121%" y="341" width="6.0606%" height="15" fill="rgb(209,9,3)" fg:x="14" fg:w="4"/><text x="21.4621%" y="351.50">stmt-75d..</text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::process::program_exists (4 samples, 6.06%)</title><rect x="21.2121%" y="325" width="6.0606%" height="15" fill="rgb(230,59,30)" fg:x="14" fg:w="4"/><text x="21.4621%" y="335.50">stmt-75d..</text></g><g><title>`0x7FF9FA295FC9 (4 samples, 6.06%)</title><rect x="21.2121%" y="309" width="6.0606%" height="15" fill="rgb(209,121,21)" fg:x="14" fg:w="4"/><text x="21.4621%" y="319.50">`0x7FF9F..</text></g><g><title>`0x7FF9FCD5FDD4 (4 samples, 6.06%)</title><rect x="21.2121%" y="293" width="6.0606%" height="15" fill="rgb(220,109,13)" fg:x="14" fg:w="4"/><text x="21.4621%" y="303.50">`0x7FF9F..</text></g><g><title>stmt-75d513914b7607b8.exe`once_cell::sync::impl$12::deref(once_cell::sync::Lazy&lt;criterion::PlottingBackend,criterion::PlottingBackend (*) (1 samples, 1.52%)</title><rect x="27.2727%" y="613" width="1.5152%" height="15" fill="rgb(232,18,1)" fg:x="18" fg:w="1"/><text x="27.5227%" y="623.50"></text></g><g><title>stmt-75d513914b7607b8.exe`criterion::html::Html::new(alloc::boxed::Box&lt;dyn$ (1 samples, 1.52%)</title><rect x="27.2727%" y="597" width="1.5152%" height="15" fill="rgb(215,41,42)" fg:x="18" fg:w="1"/><text x="27.5227%" y="607.50"></text></g><g><title>stmt-75d513914b7607b8.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;tinytemplate::error::Error&gt; &gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;tinytemplate::error::Error&gt; &gt; &gt;, ref$ (1 samples, 1.52%)</title><rect x="27.2727%" y="581" width="1.5152%" height="15" fill="rgb(224,123,36)" fg:x="18" fg:w="1"/><text x="27.5227%" y="591.50"></text></g><g><title>stmt-75d513914b7607b8.exe`tinytemplate::TinyTemplate::add_template(ref$&lt;str$&gt;, ref$ (1 samples, 1.52%)</title><rect x="27.2727%" y="565" width="1.5152%" height="15" fill="rgb(240,125,3)" fg:x="18" fg:w="1"/><text x="27.5227%" y="575.50"></text></g><g><title>stmt-75d513914b7607b8.exe`tinytemplate::template::Template::compile(ref$ (1 samples, 1.52%)</title><rect x="27.2727%" y="549" width="1.5152%" height="15" fill="rgb(205,98,50)" fg:x="18" fg:w="1"/><text x="27.5227%" y="559.50"></text></g><g><title>stmt-75d513914b7607b8.exe`tinytemplate::compiler::TemplateCompiler::new(ref$ (1 samples, 1.52%)</title><rect x="27.2727%" y="533" width="1.5152%" height="15" fill="rgb(205,185,37)" fg:x="18" fg:w="1"/><text x="27.5227%" y="543.50"></text></g><g><title>stmt-75d513914b7607b8.exe`tinytemplate::compiler::TemplateCompiler::compile (1 samples, 1.52%)</title><rect x="27.2727%" y="517" width="1.5152%" height="15" fill="rgb(238,207,15)" fg:x="18" fg:w="1"/><text x="27.5227%" y="527.50"></text></g><g><title>stmt-75d513914b7607b8.exe`tinytemplate::compiler::TemplateCompiler::consume_text (1 samples, 1.52%)</title><rect x="27.2727%" y="501" width="1.5152%" height="15" fill="rgb(213,199,42)" fg:x="18" fg:w="1"/><text x="27.5227%" y="511.50"></text></g><g><title>stmt-75d513914b7607b8.exe`enum2$&lt;core::option::Option&lt;usize&gt; &gt;::unwrap_or_else(enum2$&lt;core::option::Option (1 samples, 1.52%)</title><rect x="27.2727%" y="485" width="1.5152%" height="15" fill="rgb(235,201,11)" fg:x="18" fg:w="1"/><text x="27.5227%" y="495.50"></text></g><g><title>stmt-75d513914b7607b8.exe`core::str::pattern::impl$1::next_match (1 samples, 1.52%)</title><rect x="27.2727%" y="469" width="1.5152%" height="15" fill="rgb(207,46,11)" fg:x="18" fg:w="1"/><text x="27.5227%" y="479.50"></text></g><g><title>stmt-75d513914b7607b8.exe`core::slice::memchr::memchr_aligned (1 samples, 1.52%)</title><rect x="27.2727%" y="453" width="1.5152%" height="15" fill="rgb(241,35,35)" fg:x="18" fg:w="1"/><text x="27.5227%" y="463.50"></text></g><g><title>stmt-75d513914b7607b8.exe`core::slice::memchr::memchr_naive (1 samples, 1.52%)</title><rect x="27.2727%" y="437" width="1.5152%" height="15" fill="rgb(243,32,47)" fg:x="18" fg:w="1"/><text x="27.5227%" y="447.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (1 samples, 1.52%)</title><rect x="28.7879%" y="373" width="1.5152%" height="15" fill="rgb(247,202,23)" fg:x="19" fg:w="1"/><text x="29.0379%" y="383.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 1.52%)</title><rect x="28.7879%" y="357" width="1.5152%" height="15" fill="rgb(219,102,11)" fg:x="19" fg:w="1"/><text x="29.0379%" y="367.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 1.52%)</title><rect x="28.7879%" y="341" width="1.5152%" height="15" fill="rgb(243,110,44)" fg:x="19" fg:w="1"/><text x="29.0379%" y="351.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 1.52%)</title><rect x="28.7879%" y="325" width="1.5152%" height="15" fill="rgb(222,74,54)" fg:x="19" fg:w="1"/><text x="29.0379%" y="335.50"></text></g><g><title>stmt-75d513914b7607b8.exe`core::ptr::drop_in_place&lt;std::process::Command&gt; (1 samples, 1.52%)</title><rect x="28.7879%" y="309" width="1.5152%" height="15" fill="rgb(216,99,12)" fg:x="19" fg:w="1"/><text x="29.0379%" y="319.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::pop (1 samples, 1.52%)</title><rect x="31.8182%" y="229" width="1.5152%" height="15" fill="rgb(226,22,26)" fg:x="21" fg:w="1"/><text x="32.0682%" y="239.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (4 samples, 6.06%)</title><rect x="28.7879%" y="389" width="6.0606%" height="15" fill="rgb(217,163,10)" fg:x="19" fg:w="4"/><text x="29.0379%" y="399.50">stmt-75d..</text></g><g><title>stmt-75d513914b7607b8.exe`serde_json::de::from_trait&lt;serde_json::read::SliceRead,criterion::cargo_target_directory::Metadata&gt; (3 samples, 4.55%)</title><rect x="30.3030%" y="373" width="4.5455%" height="15" fill="rgb(213,25,53)" fg:x="20" fg:w="3"/><text x="30.5530%" y="383.50">stmt-..</text></g><g><title>stmt-75d513914b7607b8.exe`serde_json::de::impl$7::deserialize_struct&lt;serde_json::read::SliceRead,criterion::cargo_target_directory::_::impl$0::deserialize::__Visitor&gt;(serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (3 samples, 4.55%)</title><rect x="30.3030%" y="357" width="4.5455%" height="15" fill="rgb(252,105,26)" fg:x="20" fg:w="3"/><text x="30.5530%" y="367.50">stmt-..</text></g><g><title>stmt-75d513914b7607b8.exe`criterion::cargo_target_directory::_::impl$0::deserialize::impl$2::visit_map(criterion::cargo_target_directory::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (3 samples, 4.55%)</title><rect x="30.3030%" y="341" width="4.5455%" height="15" fill="rgb(220,39,43)" fg:x="20" fg:w="3"/><text x="30.5530%" y="351.50">stmt-..</text></g><g><title>stmt-75d513914b7607b8.exe`serde::de::MapAccess::next_value(serde_json::de::MapAccess (3 samples, 4.55%)</title><rect x="30.3030%" y="325" width="4.5455%" height="15" fill="rgb(229,68,48)" fg:x="20" fg:w="3"/><text x="30.5530%" y="335.50">stmt-..</text></g><g><title>stmt-75d513914b7607b8.exe`serde_json::de::impl$11::next_value_seed(serde_json::de::MapAccess&lt;serde_json::read::SliceRead&gt;*, core::marker::PhantomData (3 samples, 4.55%)</title><rect x="30.3030%" y="309" width="4.5455%" height="15" fill="rgb(252,8,32)" fg:x="20" fg:w="3"/><text x="30.5530%" y="319.50">stmt-..</text></g><g><title>stmt-75d513914b7607b8.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;serde::de::ignored_any::IgnoredAny&gt;, serde_json::de::Deserializer (3 samples, 4.55%)</title><rect x="30.3030%" y="293" width="4.5455%" height="15" fill="rgb(223,20,43)" fg:x="20" fg:w="3"/><text x="30.5530%" y="303.50">stmt-..</text></g><g><title>stmt-75d513914b7607b8.exe`serde::de::ignored_any::impl$1::deserialize(serde_json::de::Deserializer (3 samples, 4.55%)</title><rect x="30.3030%" y="277" width="4.5455%" height="15" fill="rgb(229,81,49)" fg:x="20" fg:w="3"/><text x="30.5530%" y="287.50">stmt-..</text></g><g><title>stmt-75d513914b7607b8.exe`serde_json::de::impl$7::deserialize_ignored_any(serde_json::de::Deserializer (3 samples, 4.55%)</title><rect x="30.3030%" y="261" width="4.5455%" height="15" fill="rgb(236,28,36)" fg:x="20" fg:w="3"/><text x="30.5530%" y="271.50">stmt-..</text></g><g><title>stmt-75d513914b7607b8.exe`serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt;::ignore_value (3 samples, 4.55%)</title><rect x="30.3030%" y="245" width="4.5455%" height="15" fill="rgb(249,185,26)" fg:x="20" fg:w="3"/><text x="30.5530%" y="255.50">stmt-..</text></g><g><title>stmt-75d513914b7607b8.exe`serde_json::read::impl$7::ignore_str (1 samples, 1.52%)</title><rect x="33.3333%" y="229" width="1.5152%" height="15" fill="rgb(249,174,33)" fg:x="22" fg:w="1"/><text x="33.5833%" y="239.50"></text></g><g><title>stmt-75d513914b7607b8.exe`core::result::impl$26::branch (1 samples, 1.52%)</title><rect x="34.8485%" y="325" width="1.5152%" height="15" fill="rgb(233,201,37)" fg:x="23" fg:w="1"/><text x="35.0985%" y="335.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::process::Stdio::to_handle (1 samples, 1.52%)</title><rect x="34.8485%" y="309" width="1.5152%" height="15" fill="rgb(221,78,26)" fg:x="23" fg:w="1"/><text x="35.0985%" y="319.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::pipe::anon_pipe (1 samples, 1.52%)</title><rect x="34.8485%" y="293" width="1.5152%" height="15" fill="rgb(250,127,30)" fg:x="23" fg:w="1"/><text x="35.0985%" y="303.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::os::windows::ffi::impl$1::encode_wide (1 samples, 1.52%)</title><rect x="34.8485%" y="277" width="1.5152%" height="15" fill="rgb(230,49,44)" fg:x="23" fg:w="1"/><text x="35.0985%" y="287.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::vec::impl$15::from_iter (1 samples, 1.52%)</title><rect x="34.8485%" y="261" width="1.5152%" height="15" fill="rgb(229,67,23)" fg:x="23" fg:w="1"/><text x="35.0985%" y="271.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::vec::spec_from_iter::impl$0::from_iter (1 samples, 1.52%)</title><rect x="34.8485%" y="245" width="1.5152%" height="15" fill="rgb(249,83,47)" fg:x="23" fg:w="1"/><text x="35.0985%" y="255.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter (1 samples, 1.52%)</title><rect x="34.8485%" y="229" width="1.5152%" height="15" fill="rgb(215,43,3)" fg:x="23" fg:w="1"/><text x="35.0985%" y="239.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::vec::spec_extend::impl$0::spec_extend (1 samples, 1.52%)</title><rect x="34.8485%" y="213" width="1.5152%" height="15" fill="rgb(238,154,13)" fg:x="23" fg:w="1"/><text x="35.0985%" y="223.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::vec::Vec::extend_desugared (1 samples, 1.52%)</title><rect x="34.8485%" y="197" width="1.5152%" height="15" fill="rgb(219,56,2)" fg:x="23" fg:w="1"/><text x="35.0985%" y="207.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::vec::Vec::reserve (1 samples, 1.52%)</title><rect x="34.8485%" y="181" width="1.5152%" height="15" fill="rgb(233,0,4)" fg:x="23" fg:w="1"/><text x="35.0985%" y="191.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::raw_vec::RawVec::reserve (1 samples, 1.52%)</title><rect x="34.8485%" y="165" width="1.5152%" height="15" fill="rgb(235,30,7)" fg:x="23" fg:w="1"/><text x="35.0985%" y="175.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::raw_vec::RawVecInner::reserve (1 samples, 1.52%)</title><rect x="34.8485%" y="149" width="1.5152%" height="15" fill="rgb(250,79,13)" fg:x="23" fg:w="1"/><text x="35.0985%" y="159.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle (1 samples, 1.52%)</title><rect x="34.8485%" y="133" width="1.5152%" height="15" fill="rgb(211,146,34)" fg:x="23" fg:w="1"/><text x="35.0985%" y="143.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 1.52%)</title><rect x="34.8485%" y="117" width="1.5152%" height="15" fill="rgb(228,22,38)" fg:x="23" fg:w="1"/><text x="35.0985%" y="127.50"></text></g><g><title>stmt-75d513914b7607b8.exe`core::result::impl$26::branch (1 samples, 1.52%)</title><rect x="34.8485%" y="101" width="1.5152%" height="15" fill="rgb(235,168,5)" fg:x="23" fg:w="1"/><text x="35.0985%" y="111.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 1.52%)</title><rect x="34.8485%" y="85" width="1.5152%" height="15" fill="rgb(221,155,16)" fg:x="23" fg:w="1"/><text x="35.0985%" y="95.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::alloc::impl$1::grow (1 samples, 1.52%)</title><rect x="34.8485%" y="69" width="1.5152%" height="15" fill="rgb(215,215,53)" fg:x="23" fg:w="1"/><text x="35.0985%" y="79.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::alloc::Global::grow_impl (1 samples, 1.52%)</title><rect x="34.8485%" y="53" width="1.5152%" height="15" fill="rgb(223,4,10)" fg:x="23" fg:w="1"/><text x="35.0985%" y="63.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::alloc::realloc (1 samples, 1.52%)</title><rect x="34.8485%" y="37" width="1.5152%" height="15" fill="rgb(234,103,6)" fg:x="23" fg:w="1"/><text x="35.0985%" y="47.50"></text></g><g><title>`0x7FF9FCC4B032 (1 samples, 1.52%)</title><rect x="36.3636%" y="165" width="1.5152%" height="15" fill="rgb(227,97,0)" fg:x="24" fg:w="1"/><text x="36.6136%" y="175.50"></text></g><g><title>`0x7FF9FCC269A4 (1 samples, 1.52%)</title><rect x="36.3636%" y="149" width="1.5152%" height="15" fill="rgb(234,150,53)" fg:x="24" fg:w="1"/><text x="36.6136%" y="159.50"></text></g><g><title>`0x7FF9FCC070E1 (1 samples, 1.52%)</title><rect x="36.3636%" y="133" width="1.5152%" height="15" fill="rgb(228,201,54)" fg:x="24" fg:w="1"/><text x="36.6136%" y="143.50"></text></g><g><title>`0x7FF9FCC0884E (1 samples, 1.52%)</title><rect x="36.3636%" y="117" width="1.5152%" height="15" fill="rgb(222,22,37)" fg:x="24" fg:w="1"/><text x="36.6136%" y="127.50"></text></g><g><title>`0x7FF9FCC08D1A (1 samples, 1.52%)</title><rect x="36.3636%" y="101" width="1.5152%" height="15" fill="rgb(237,53,32)" fg:x="24" fg:w="1"/><text x="36.6136%" y="111.50"></text></g><g><title>`0x7FF9FCD5FB34 (1 samples, 1.52%)</title><rect x="36.3636%" y="85" width="1.5152%" height="15" fill="rgb(233,25,53)" fg:x="24" fg:w="1"/><text x="36.6136%" y="95.50"></text></g><g><title>`0x7FF9FA30E323 (2 samples, 3.03%)</title><rect x="36.3636%" y="261" width="3.0303%" height="15" fill="rgb(210,40,34)" fg:x="24" fg:w="2"/><text x="36.6136%" y="271.50">`0x..</text></g><g><title>`0x7FF9FA343FCF (2 samples, 3.03%)</title><rect x="36.3636%" y="245" width="3.0303%" height="15" fill="rgb(241,220,44)" fg:x="24" fg:w="2"/><text x="36.6136%" y="255.50">`0x..</text></g><g><title>`0x7FF9FA31CAE2 (2 samples, 3.03%)</title><rect x="36.3636%" y="229" width="3.0303%" height="15" fill="rgb(235,28,35)" fg:x="24" fg:w="2"/><text x="36.6136%" y="239.50">`0x..</text></g><g><title>`0x7FF9FCC0AB90 (2 samples, 3.03%)</title><rect x="36.3636%" y="213" width="3.0303%" height="15" fill="rgb(210,56,17)" fg:x="24" fg:w="2"/><text x="36.6136%" y="223.50">`0x..</text></g><g><title>`0x7FF9FCC0CB03 (2 samples, 3.03%)</title><rect x="36.3636%" y="197" width="3.0303%" height="15" fill="rgb(224,130,29)" fg:x="24" fg:w="2"/><text x="36.6136%" y="207.50">`0x..</text></g><g><title>`0x7FF9FCC4B656 (2 samples, 3.03%)</title><rect x="36.3636%" y="181" width="3.0303%" height="15" fill="rgb(235,212,8)" fg:x="24" fg:w="2"/><text x="36.6136%" y="191.50">`0x..</text></g><g><title>`0x7FF9FCC4B0C4 (1 samples, 1.52%)</title><rect x="37.8788%" y="165" width="1.5152%" height="15" fill="rgb(223,33,50)" fg:x="25" fg:w="1"/><text x="38.1288%" y="175.50"></text></g><g><title>`0x7FF9FCCD2F1F (1 samples, 1.52%)</title><rect x="37.8788%" y="149" width="1.5152%" height="15" fill="rgb(219,149,13)" fg:x="25" fg:w="1"/><text x="38.1288%" y="159.50"></text></g><g><title>`0x7FF9FCCD3005 (1 samples, 1.52%)</title><rect x="37.8788%" y="133" width="1.5152%" height="15" fill="rgb(250,156,29)" fg:x="25" fg:w="1"/><text x="38.1288%" y="143.50"></text></g><g><title>`0x7FF9FCC0873B (1 samples, 1.52%)</title><rect x="37.8788%" y="117" width="1.5152%" height="15" fill="rgb(216,193,19)" fg:x="25" fg:w="1"/><text x="38.1288%" y="127.50"></text></g><g><title>`0x7FF9FCC07F85 (1 samples, 1.52%)</title><rect x="37.8788%" y="101" width="1.5152%" height="15" fill="rgb(216,135,14)" fg:x="25" fg:w="1"/><text x="38.1288%" y="111.50"></text></g><g><title>`0x7FF9FCC07ABD (1 samples, 1.52%)</title><rect x="37.8788%" y="85" width="1.5152%" height="15" fill="rgb(241,47,5)" fg:x="25" fg:w="1"/><text x="38.1288%" y="95.50"></text></g><g><title>`0x7FF9FCD5FFB4 (1 samples, 1.52%)</title><rect x="37.8788%" y="69" width="1.5152%" height="15" fill="rgb(233,42,35)" fg:x="25" fg:w="1"/><text x="38.1288%" y="79.50"></text></g><g><title>`0x7FF9FA30EE51 (1 samples, 1.52%)</title><rect x="39.3939%" y="261" width="1.5152%" height="15" fill="rgb(231,13,6)" fg:x="26" fg:w="1"/><text x="39.6439%" y="271.50"></text></g><g><title>`0x7FF9FA338544 (1 samples, 1.52%)</title><rect x="39.3939%" y="245" width="1.5152%" height="15" fill="rgb(207,181,40)" fg:x="26" fg:w="1"/><text x="39.6439%" y="255.50"></text></g><g><title>`0x7FF9FA30F05A (4 samples, 6.06%)</title><rect x="40.9091%" y="261" width="6.0606%" height="15" fill="rgb(254,173,49)" fg:x="27" fg:w="4"/><text x="41.1591%" y="271.50">`0x7FF9F..</text></g><g><title>`0x7FF9FCD61044 (4 samples, 6.06%)</title><rect x="40.9091%" y="245" width="6.0606%" height="15" fill="rgb(221,1,38)" fg:x="27" fg:w="4"/><text x="41.1591%" y="255.50">`0x7FF9F..</text></g><g><title>`0x7FF9FA30FF0D (1 samples, 1.52%)</title><rect x="46.9697%" y="261" width="1.5152%" height="15" fill="rgb(206,124,46)" fg:x="31" fg:w="1"/><text x="47.2197%" y="271.50"></text></g><g><title>`0x7FF9FB7D3846 (1 samples, 1.52%)</title><rect x="46.9697%" y="245" width="1.5152%" height="15" fill="rgb(249,21,11)" fg:x="31" fg:w="1"/><text x="47.2197%" y="255.50"></text></g><g><title>`0x7FF9FCD5F874 (1 samples, 1.52%)</title><rect x="46.9697%" y="229" width="1.5152%" height="15" fill="rgb(222,201,40)" fg:x="31" fg:w="1"/><text x="47.2197%" y="239.50"></text></g><g><title>`0x7FF9FA310158 (2 samples, 3.03%)</title><rect x="48.4848%" y="261" width="3.0303%" height="15" fill="rgb(235,61,29)" fg:x="32" fg:w="2"/><text x="48.7348%" y="271.50">`0x..</text></g><g><title>`0x7FF9FB7BB342 (2 samples, 3.03%)</title><rect x="48.4848%" y="245" width="3.0303%" height="15" fill="rgb(219,207,3)" fg:x="32" fg:w="2"/><text x="48.7348%" y="255.50">`0x..</text></g><g><title>`0x7FF9FB7BB936 (2 samples, 3.03%)</title><rect x="48.4848%" y="229" width="3.0303%" height="15" fill="rgb(222,56,46)" fg:x="32" fg:w="2"/><text x="48.7348%" y="239.50">`0x..</text></g><g><title>`0x7FF9FCD5FFB4 (2 samples, 3.03%)</title><rect x="48.4848%" y="213" width="3.0303%" height="15" fill="rgb(239,76,54)" fg:x="32" fg:w="2"/><text x="48.7348%" y="223.50">`0x..</text></g><g><title>`0x7FF9FA3102BC (1 samples, 1.52%)</title><rect x="51.5152%" y="261" width="1.5152%" height="15" fill="rgb(231,124,27)" fg:x="34" fg:w="1"/><text x="51.7652%" y="271.50"></text></g><g><title>`0x7FF9FB7C751E (1 samples, 1.52%)</title><rect x="51.5152%" y="245" width="1.5152%" height="15" fill="rgb(249,195,6)" fg:x="34" fg:w="1"/><text x="51.7652%" y="255.50"></text></g><g><title>`0x7FF9FB7C6443 (1 samples, 1.52%)</title><rect x="51.5152%" y="229" width="1.5152%" height="15" fill="rgb(237,174,47)" fg:x="34" fg:w="1"/><text x="51.7652%" y="239.50"></text></g><g><title>`0x7FF9FB7C650D (1 samples, 1.52%)</title><rect x="51.5152%" y="213" width="1.5152%" height="15" fill="rgb(206,201,31)" fg:x="34" fg:w="1"/><text x="51.7652%" y="223.50"></text></g><g><title>`0x7FF9FCCB1F53 (1 samples, 1.52%)</title><rect x="51.5152%" y="197" width="1.5152%" height="15" fill="rgb(231,57,52)" fg:x="34" fg:w="1"/><text x="51.7652%" y="207.50"></text></g><g><title>`0x7FF9FCCB0645 (1 samples, 1.52%)</title><rect x="51.5152%" y="181" width="1.5152%" height="15" fill="rgb(248,177,22)" fg:x="34" fg:w="1"/><text x="51.7652%" y="191.50"></text></g><g><title>`0x7FF9FCD5F814 (1 samples, 1.52%)</title><rect x="51.5152%" y="165" width="1.5152%" height="15" fill="rgb(215,211,37)" fg:x="34" fg:w="1"/><text x="51.7652%" y="175.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::process::Command::spawn (13 samples, 19.70%)</title><rect x="34.8485%" y="341" width="19.6970%" height="15" fill="rgb(241,128,51)" fg:x="23" fg:w="13"/><text x="35.0985%" y="351.50">stmt-75d513914b7607b8.exe`std::..</text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::cvt (12 samples, 18.18%)</title><rect x="36.3636%" y="325" width="18.1818%" height="15" fill="rgb(227,165,31)" fg:x="24" fg:w="12"/><text x="36.6136%" y="335.50">stmt-75d513914b7607b8.exe`st..</text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::impl$3::is_zero (12 samples, 18.18%)</title><rect x="36.3636%" y="309" width="18.1818%" height="15" fill="rgb(228,167,24)" fg:x="24" fg:w="12"/><text x="36.6136%" y="319.50">stmt-75d513914b7607b8.exe`st..</text></g><g><title>`0x7FF9FB7DC254 (12 samples, 18.18%)</title><rect x="36.3636%" y="293" width="18.1818%" height="15" fill="rgb(228,143,12)" fg:x="24" fg:w="12"/><text x="36.6136%" y="303.50">`0x7FF9FB7DC254</text></g><g><title>`0x7FF9FA30C796 (12 samples, 18.18%)</title><rect x="36.3636%" y="277" width="18.1818%" height="15" fill="rgb(249,149,8)" fg:x="24" fg:w="12"/><text x="36.6136%" y="287.50">`0x7FF9FA30C796</text></g><g><title>`0x7FF9FA3123D3 (1 samples, 1.52%)</title><rect x="53.0303%" y="261" width="1.5152%" height="15" fill="rgb(243,35,44)" fg:x="35" fg:w="1"/><text x="53.2803%" y="271.50"></text></g><g><title>`0x7FF9FA388280 (1 samples, 1.52%)</title><rect x="53.0303%" y="245" width="1.5152%" height="15" fill="rgb(246,89,9)" fg:x="35" fg:w="1"/><text x="53.2803%" y="255.50"></text></g><g><title>`0x7FF9FA25DAD1 (1 samples, 1.52%)</title><rect x="54.5455%" y="293" width="1.5152%" height="15" fill="rgb(233,213,13)" fg:x="36" fg:w="1"/><text x="54.7955%" y="303.50"></text></g><g><title>`0x7FF9FA25DC03 (1 samples, 1.52%)</title><rect x="54.5455%" y="277" width="1.5152%" height="15" fill="rgb(233,141,41)" fg:x="36" fg:w="1"/><text x="54.7955%" y="287.50"></text></g><g><title>`0x7FF9FCD60184 (1 samples, 1.52%)</title><rect x="54.5455%" y="261" width="1.5152%" height="15" fill="rgb(239,167,4)" fg:x="36" fg:w="1"/><text x="54.7955%" y="271.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::pipe::AsyncPipe::result (1 samples, 1.52%)</title><rect x="56.0606%" y="293" width="1.5152%" height="15" fill="rgb(209,217,16)" fg:x="37" fg:w="1"/><text x="56.3106%" y="303.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::handle::Handle::overlapped_result (1 samples, 1.52%)</title><rect x="56.0606%" y="277" width="1.5152%" height="15" fill="rgb(219,88,35)" fg:x="37" fg:w="1"/><text x="56.3106%" y="287.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::cvt (1 samples, 1.52%)</title><rect x="56.0606%" y="261" width="1.5152%" height="15" fill="rgb(220,193,23)" fg:x="37" fg:w="1"/><text x="56.3106%" y="271.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 1.52%)</title><rect x="56.0606%" y="245" width="1.5152%" height="15" fill="rgb(230,90,52)" fg:x="37" fg:w="1"/><text x="56.3106%" y="255.50"></text></g><g><title>`0x7FF9FA265174 (1 samples, 1.52%)</title><rect x="56.0606%" y="229" width="1.5152%" height="15" fill="rgb(252,106,19)" fg:x="37" fg:w="1"/><text x="56.3106%" y="239.50"></text></g><g><title>`0x7FF9FCC15B12 (1 samples, 1.52%)</title><rect x="56.0606%" y="213" width="1.5152%" height="15" fill="rgb(206,74,20)" fg:x="37" fg:w="1"/><text x="56.3106%" y="223.50"></text></g><g><title>stmt-75d513914b7607b8.exe`criterion::impl$4::default (27 samples, 40.91%)</title><rect x="18.1818%" y="629" width="40.9091%" height="15" fill="rgb(230,138,44)" fg:x="12" fg:w="27"/><text x="18.4318%" y="639.50">stmt-75d513914b7607b8.exe`criterion::impl$4::default</text></g><g><title>stmt-75d513914b7607b8.exe`once_cell::sync::impl$12::deref(once_cell::sync::Lazy&lt;std::path::PathBuf,std::path::PathBuf (*) (20 samples, 30.30%)</title><rect x="28.7879%" y="613" width="30.3030%" height="15" fill="rgb(235,182,43)" fg:x="19" fg:w="20"/><text x="29.0379%" y="623.50">stmt-75d513914b7607b8.exe`once_cell::sync::impl$1..</text></g><g><title>stmt-75d513914b7607b8.exe`std::ffi::os_str::impl$10::clone (20 samples, 30.30%)</title><rect x="28.7879%" y="597" width="30.3030%" height="15" fill="rgb(242,16,51)" fg:x="19" fg:w="20"/><text x="29.0379%" y="607.50">stmt-75d513914b7607b8.exe`std::ffi::os_str::impl$..</text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::os_str::wtf8::impl$10::clone (20 samples, 30.30%)</title><rect x="28.7879%" y="581" width="30.3030%" height="15" fill="rgb(248,9,4)" fg:x="19" fg:w="20"/><text x="29.0379%" y="591.50">stmt-75d513914b7607b8.exe`std::sys::os_str::wtf8:..</text></g><g><title>stmt-75d513914b7607b8.exe`std::sys_common::wtf8::impl$35::clone (20 samples, 30.30%)</title><rect x="28.7879%" y="565" width="30.3030%" height="15" fill="rgb(210,31,22)" fg:x="19" fg:w="20"/><text x="29.0379%" y="575.50">stmt-75d513914b7607b8.exe`std::sys_common::wtf8::..</text></g><g><title>stmt-75d513914b7607b8.exe`alloc::vec::impl$11::clone(alloc::vec::Vec (20 samples, 30.30%)</title><rect x="28.7879%" y="549" width="30.3030%" height="15" fill="rgb(239,54,39)" fg:x="19" fg:w="20"/><text x="29.0379%" y="559.50">stmt-75d513914b7607b8.exe`alloc::vec::impl$11::cl..</text></g><g><title>stmt-75d513914b7607b8.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (20 samples, 30.30%)</title><rect x="28.7879%" y="533" width="30.3030%" height="15" fill="rgb(230,99,41)" fg:x="19" fg:w="20"/><text x="29.0379%" y="543.50">stmt-75d513914b7607b8.exe`alloc::vec::impl$8::der..</text></g><g><title>stmt-75d513914b7607b8.exe`once_cell::imp::OnceCell&lt;std::path::PathBuf&gt;::initialize&lt;std::path::PathBuf,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$11::force::closure_env$0&lt;std::path::PathBuf,std::path::PathBuf (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$11::force::closure_env$0&lt;std::path::PathBuf,std::path::PathBuf (*) (20 samples, 30.30%)</title><rect x="28.7879%" y="517" width="30.3030%" height="15" fill="rgb(253,106,12)" fg:x="19" fg:w="20"/><text x="29.0379%" y="527.50">stmt-75d513914b7607b8.exe`once_cell::imp::OnceCel..</text></g><g><title>stmt-75d513914b7607b8.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (20 samples, 30.30%)</title><rect x="28.7879%" y="501" width="30.3030%" height="15" fill="rgb(213,46,41)" fg:x="19" fg:w="20"/><text x="29.0379%" y="511.50">stmt-75d513914b7607b8.exe`once_cell::imp::initial..</text></g><g><title>stmt-75d513914b7607b8.exe`once_cell::imp::impl$4::initialize::closure$0&lt;std::path::PathBuf,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$11::force::closure_env$0&lt;std::path::PathBuf,std::path::PathBuf (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$11::force::closure_env$0&lt;std::path::PathBuf,std::path::PathBuf (*)()&gt; &gt;,enum2$ (20 samples, 30.30%)</title><rect x="28.7879%" y="485" width="30.3030%" height="15" fill="rgb(215,133,35)" fg:x="19" fg:w="20"/><text x="29.0379%" y="495.50">stmt-75d513914b7607b8.exe`once_cell::imp::impl$4:..</text></g><g><title>stmt-75d513914b7607b8.exe`core::ops::function::FnOnce::call_once&lt;criterion::DEFAULT_OUTPUT_DIRECTORY::closure_env$0,tuple$&lt;&gt; &gt; (20 samples, 30.30%)</title><rect x="28.7879%" y="469" width="30.3030%" height="15" fill="rgb(213,28,5)" fg:x="19" fg:w="20"/><text x="29.0379%" y="479.50">stmt-75d513914b7607b8.exe`core::ops::function::Fn..</text></g><g><title>stmt-75d513914b7607b8.exe`criterion::DEFAULT_OUTPUT_DIRECTORY::closure$0 (20 samples, 30.30%)</title><rect x="28.7879%" y="453" width="30.3030%" height="15" fill="rgb(215,77,49)" fg:x="19" fg:w="20"/><text x="29.0379%" y="463.50">stmt-75d513914b7607b8.exe`criterion::DEFAULT_OUTP..</text></g><g><title>stmt-75d513914b7607b8.exe`criterion::cargo_target_directory (20 samples, 30.30%)</title><rect x="28.7879%" y="437" width="30.3030%" height="15" fill="rgb(248,100,22)" fg:x="19" fg:w="20"/><text x="29.0379%" y="447.50">stmt-75d513914b7607b8.exe`criterion::cargo_target..</text></g><g><title>stmt-75d513914b7607b8.exe`enum2$&lt;core::option::Option&lt;std::path::PathBuf&gt; &gt;::or_else(enum2$&lt;core::option::Option (20 samples, 30.30%)</title><rect x="28.7879%" y="421" width="30.3030%" height="15" fill="rgb(208,67,9)" fg:x="19" fg:w="20"/><text x="29.0379%" y="431.50">stmt-75d513914b7607b8.exe`enum2$&lt;core::option::Op..</text></g><g><title>stmt-75d513914b7607b8.exe`criterion::cargo_target_directory::closure$0 (20 samples, 30.30%)</title><rect x="28.7879%" y="405" width="30.3030%" height="15" fill="rgb(219,133,21)" fg:x="19" fg:w="20"/><text x="29.0379%" y="415.50">stmt-75d513914b7607b8.exe`criterion::cargo_target..</text></g><g><title>stmt-75d513914b7607b8.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::ok(enum2$&lt;core::result::Result (16 samples, 24.24%)</title><rect x="34.8485%" y="389" width="24.2424%" height="15" fill="rgb(246,46,29)" fg:x="23" fg:w="16"/><text x="35.0985%" y="399.50">stmt-75d513914b7607b8.exe`enum2$&lt;core::..</text></g><g><title>stmt-75d513914b7607b8.exe`std::process::Command::output (16 samples, 24.24%)</title><rect x="34.8485%" y="373" width="24.2424%" height="15" fill="rgb(246,185,52)" fg:x="23" fg:w="16"/><text x="35.0985%" y="383.50">stmt-75d513914b7607b8.exe`std::process:..</text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::process::Command::output (16 samples, 24.24%)</title><rect x="34.8485%" y="357" width="24.2424%" height="15" fill="rgb(252,136,11)" fg:x="23" fg:w="16"/><text x="35.0985%" y="367.50">stmt-75d513914b7607b8.exe`std::sys::pal..</text></g><g><title>stmt-75d513914b7607b8.exe`std::sys_common::process::wait_with_output (3 samples, 4.55%)</title><rect x="54.5455%" y="341" width="4.5455%" height="15" fill="rgb(219,138,53)" fg:x="36" fg:w="3"/><text x="54.7955%" y="351.50">stmt-..</text></g><g><title>stmt-75d513914b7607b8.exe`core::result::Result::unwrap (3 samples, 4.55%)</title><rect x="54.5455%" y="325" width="4.5455%" height="15" fill="rgb(211,51,23)" fg:x="36" fg:w="3"/><text x="54.7955%" y="335.50">stmt-..</text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::pipe::read2 (3 samples, 4.55%)</title><rect x="54.5455%" y="309" width="4.5455%" height="15" fill="rgb(247,221,28)" fg:x="36" fg:w="3"/><text x="54.7955%" y="319.50">stmt-..</text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::pipe::AsyncPipe::schedule_read (1 samples, 1.52%)</title><rect x="57.5758%" y="293" width="1.5152%" height="15" fill="rgb(251,222,45)" fg:x="38" fg:w="1"/><text x="57.8258%" y="303.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::vec::Vec::spare_capacity_mut (1 samples, 1.52%)</title><rect x="57.5758%" y="277" width="1.5152%" height="15" fill="rgb(217,162,53)" fg:x="38" fg:w="1"/><text x="57.8258%" y="287.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::raw_vec::RawVec::capacity (1 samples, 1.52%)</title><rect x="57.5758%" y="261" width="1.5152%" height="15" fill="rgb(229,93,14)" fg:x="38" fg:w="1"/><text x="57.8258%" y="271.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::raw_vec::RawVecInner::capacity (1 samples, 1.52%)</title><rect x="57.5758%" y="245" width="1.5152%" height="15" fill="rgb(209,67,49)" fg:x="38" fg:w="1"/><text x="57.8258%" y="255.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt; (1 samples, 1.52%)</title><rect x="57.5758%" y="229" width="1.5152%" height="15" fill="rgb(213,87,29)" fg:x="38" fg:w="1"/><text x="57.8258%" y="239.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 1.52%)</title><rect x="57.5758%" y="213" width="1.5152%" height="15" fill="rgb(205,151,52)" fg:x="38" fg:w="1"/><text x="57.8258%" y="223.50"></text></g><g><title>stmt-75d513914b7607b8.exe`core::result::impl$26::branch (1 samples, 1.52%)</title><rect x="57.5758%" y="197" width="1.5152%" height="15" fill="rgb(253,215,39)" fg:x="38" fg:w="1"/><text x="57.8258%" y="207.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 1.52%)</title><rect x="57.5758%" y="181" width="1.5152%" height="15" fill="rgb(221,220,41)" fg:x="38" fg:w="1"/><text x="57.8258%" y="191.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::alloc::impl$1::grow (1 samples, 1.52%)</title><rect x="57.5758%" y="165" width="1.5152%" height="15" fill="rgb(218,133,21)" fg:x="38" fg:w="1"/><text x="57.8258%" y="175.50"></text></g><g><title>stmt-75d513914b7607b8.exe`alloc::alloc::Global::grow_impl (1 samples, 1.52%)</title><rect x="57.5758%" y="149" width="1.5152%" height="15" fill="rgb(221,193,43)" fg:x="38" fg:w="1"/><text x="57.8258%" y="159.50"></text></g><g><title>stmt-75d513914b7607b8.exe`core::result::impl$26::branch (1 samples, 1.52%)</title><rect x="57.5758%" y="133" width="1.5152%" height="15" fill="rgb(240,128,52)" fg:x="38" fg:w="1"/><text x="57.8258%" y="143.50"></text></g><g><title>`0x7FF9FCC35376 (1 samples, 1.52%)</title><rect x="57.5758%" y="117" width="1.5152%" height="15" fill="rgb(253,114,12)" fg:x="38" fg:w="1"/><text x="57.8258%" y="127.50"></text></g><g><title>`0x7FF9FCC354B5 (1 samples, 1.52%)</title><rect x="57.5758%" y="101" width="1.5152%" height="15" fill="rgb(215,223,47)" fg:x="38" fg:w="1"/><text x="57.8258%" y="111.50"></text></g><g><title>`0x7FF9FCC36459 (1 samples, 1.52%)</title><rect x="57.5758%" y="85" width="1.5152%" height="15" fill="rgb(248,225,23)" fg:x="38" fg:w="1"/><text x="57.8258%" y="95.50"></text></g><g><title>`0x7FF9FCD64E84 (1 samples, 1.52%)</title><rect x="57.5758%" y="69" width="1.5152%" height="15" fill="rgb(250,108,0)" fg:x="38" fg:w="1"/><text x="57.8258%" y="79.50"></text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::builder::command::Command::is_disable_version_flag_set (1 samples, 1.52%)</title><rect x="59.0909%" y="437" width="1.5152%" height="15" fill="rgb(228,208,7)" fg:x="39" fg:w="1"/><text x="59.3409%" y="447.50"></text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::builder::command::Command::is_set (1 samples, 1.52%)</title><rect x="59.0909%" y="421" width="1.5152%" height="15" fill="rgb(244,45,10)" fg:x="39" fg:w="1"/><text x="59.3409%" y="431.50"></text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::builder::app_settings::AppFlags::is_set (1 samples, 1.52%)</title><rect x="59.0909%" y="405" width="1.5152%" height="15" fill="rgb(207,125,25)" fg:x="39" fg:w="1"/><text x="59.3409%" y="415.50"></text></g><g><title>stmt-75d513914b7607b8.exe`enum2$&lt;core::option::Option&lt;std::sync::mutex::MutexGuard&lt;criterion::connection::Connection&gt; &gt; &gt;::is_some (2 samples, 3.03%)</title><rect x="59.0909%" y="597" width="3.0303%" height="15" fill="rgb(210,195,18)" fg:x="39" fg:w="2"/><text x="59.3409%" y="607.50">stm..</text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::builder::command::Command::get_matches_from&lt;std::env::ArgsOs,std::ffi::os_str::OsString&gt; (2 samples, 3.03%)</title><rect x="59.0909%" y="581" width="3.0303%" height="15" fill="rgb(249,80,12)" fg:x="39" fg:w="2"/><text x="59.3409%" y="591.50">stm..</text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::builder::command::Command::try_get_matches_from_mut (2 samples, 3.03%)</title><rect x="59.0909%" y="565" width="3.0303%" height="15" fill="rgb(221,65,9)" fg:x="39" fg:w="2"/><text x="59.3409%" y="575.50">stm..</text></g><g><title>stmt-75d513914b7607b8.exe`core::ptr::drop_in_place (2 samples, 3.03%)</title><rect x="59.0909%" y="549" width="3.0303%" height="15" fill="rgb(235,49,36)" fg:x="39" fg:w="2"/><text x="59.3409%" y="559.50">stm..</text></g><g><title>stmt-75d513914b7607b8.exe`core::ptr::drop_in_place(alloc::vec::Vec (2 samples, 3.03%)</title><rect x="59.0909%" y="533" width="3.0303%" height="15" fill="rgb(225,32,20)" fg:x="39" fg:w="2"/><text x="59.3409%" y="543.50">stm..</text></g><g><title>stmt-75d513914b7607b8.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (2 samples, 3.03%)</title><rect x="59.0909%" y="517" width="3.0303%" height="15" fill="rgb(215,141,46)" fg:x="39" fg:w="2"/><text x="59.3409%" y="527.50">stm..</text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::builder::command::Command::_do_parse (2 samples, 3.03%)</title><rect x="59.0909%" y="501" width="3.0303%" height="15" fill="rgb(250,160,47)" fg:x="39" fg:w="2"/><text x="59.3409%" y="511.50">stm..</text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::parser::arg_matcher::ArgMatcher::new (2 samples, 3.03%)</title><rect x="59.0909%" y="485" width="3.0303%" height="15" fill="rgb(216,222,40)" fg:x="39" fg:w="2"/><text x="59.3409%" y="495.50">stm..</text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::builder::command::Command::_build_self (2 samples, 3.03%)</title><rect x="59.0909%" y="469" width="3.0303%" height="15" fill="rgb(234,217,39)" fg:x="39" fg:w="2"/><text x="59.3409%" y="479.50">stm..</text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::builder::command::Command::_check_help_and_version (2 samples, 3.03%)</title><rect x="59.0909%" y="453" width="3.0303%" height="15" fill="rgb(207,178,40)" fg:x="39" fg:w="2"/><text x="59.3409%" y="463.50">stm..</text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::builder::command::Command::long_help_exists_ (1 samples, 1.52%)</title><rect x="60.6061%" y="437" width="1.5152%" height="15" fill="rgb(221,136,13)" fg:x="40" fg:w="1"/><text x="60.8561%" y="447.50"></text></g><g><title>stmt-75d513914b7607b8.exe`core::slice::iter::impl$182::any(core::slice::iter::Iter (1 samples, 1.52%)</title><rect x="60.6061%" y="421" width="1.5152%" height="15" fill="rgb(249,199,10)" fg:x="40" fg:w="1"/><text x="60.8561%" y="431.50"></text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::builder::command::impl$7::long_help_exists_::closure$0 (1 samples, 1.52%)</title><rect x="60.6061%" y="405" width="1.5152%" height="15" fill="rgb(249,222,13)" fg:x="40" fg:w="1"/><text x="60.8561%" y="415.50"></text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::builder::arg::Arg::get_possible_values (1 samples, 1.52%)</title><rect x="60.6061%" y="389" width="1.5152%" height="15" fill="rgb(244,185,38)" fg:x="40" fg:w="1"/><text x="60.8561%" y="399.50"></text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::builder::value_parser::ValueParser::possible_values (1 samples, 1.52%)</title><rect x="60.6061%" y="373" width="1.5152%" height="15" fill="rgb(236,202,9)" fg:x="40" fg:w="1"/><text x="60.8561%" y="383.50"></text></g><g><title>stmt-75d513914b7607b8.exe`clap_builder::builder::value_parser::ValueParser::any_value_parser (1 samples, 1.52%)</title><rect x="60.6061%" y="357" width="1.5152%" height="15" fill="rgb(250,229,37)" fg:x="40" fg:w="1"/><text x="60.8561%" y="367.50"></text></g><g><title>stmt-75d513914b7607b8.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::configure_from_args&lt;criterion::measurement::WallTime&gt;(criterion::Criterion (3 samples, 4.55%)</title><rect x="59.0909%" y="613" width="4.5455%" height="15" fill="rgb(206,174,23)" fg:x="39" fg:w="3"/><text x="59.3409%" y="623.50">stmt-..</text></g><g><title>stmt-75d513914b7607b8.exe`is_terminal::handle_is_console (1 samples, 1.52%)</title><rect x="62.1212%" y="597" width="1.5152%" height="15" fill="rgb(211,33,43)" fg:x="41" fg:w="1"/><text x="62.3712%" y="607.50"></text></g><g><title>`0x7FF9FA30A6A2 (1 samples, 1.52%)</title><rect x="62.1212%" y="581" width="1.5152%" height="15" fill="rgb(245,58,50)" fg:x="41" fg:w="1"/><text x="62.3712%" y="591.50"></text></g><g><title>`0x7FF9FCD5F714 (1 samples, 1.52%)</title><rect x="62.1212%" y="565" width="1.5152%" height="15" fill="rgb(244,68,36)" fg:x="41" fg:w="1"/><text x="62.3712%" y="575.50"></text></g><g><title>`0x7FF9FCC85A4C (42 samples, 63.64%)</title><rect x="1.5152%" y="869" width="63.6364%" height="15" fill="rgb(232,229,15)" fg:x="1" fg:w="42"/><text x="1.7652%" y="879.50">`0x7FF9FCC85A4C</text></g><g><title>`0x7FF9FB7CDBE7 (42 samples, 63.64%)</title><rect x="1.5152%" y="853" width="63.6364%" height="15" fill="rgb(254,30,23)" fg:x="1" fg:w="42"/><text x="1.7652%" y="863.50">`0x7FF9FB7CDBE7</text></g><g><title>stmt-75d513914b7607b8.exe`__scrt_common_main_seh() (39 samples, 59.09%)</title><rect x="6.0606%" y="837" width="59.0909%" height="15" fill="rgb(235,160,14)" fg:x="4" fg:w="39"/><text x="6.3106%" y="847.50">stmt-75d513914b7607b8.exe`__scrt_common_main_seh()</text></g><g><title>stmt-75d513914b7607b8.exe`invoke_main() (32 samples, 48.48%)</title><rect x="16.6667%" y="821" width="48.4848%" height="15" fill="rgb(212,155,44)" fg:x="11" fg:w="32"/><text x="16.9167%" y="831.50">stmt-75d513914b7607b8.exe`invoke_main()</text></g><g><title>stmt-75d513914b7607b8.exe`main (32 samples, 48.48%)</title><rect x="16.6667%" y="805" width="48.4848%" height="15" fill="rgb(226,2,50)" fg:x="11" fg:w="32"/><text x="16.9167%" y="815.50">stmt-75d513914b7607b8.exe`main</text></g><g><title>stmt-75d513914b7607b8.exe`std::rt::lang_start_internal (32 samples, 48.48%)</title><rect x="16.6667%" y="789" width="48.4848%" height="15" fill="rgb(234,177,6)" fg:x="11" fg:w="32"/><text x="16.9167%" y="799.50">stmt-75d513914b7607b8.exe`std::rt::lang_start_internal</text></g><g><title>stmt-75d513914b7607b8.exe`std::panic::catch_unwind (32 samples, 48.48%)</title><rect x="16.6667%" y="773" width="48.4848%" height="15" fill="rgb(217,24,9)" fg:x="11" fg:w="32"/><text x="16.9167%" y="783.50">stmt-75d513914b7607b8.exe`std::panic::catch_unwind</text></g><g><title>stmt-75d513914b7607b8.exe`std::panicking::try (32 samples, 48.48%)</title><rect x="16.6667%" y="757" width="48.4848%" height="15" fill="rgb(220,13,46)" fg:x="11" fg:w="32"/><text x="16.9167%" y="767.50">stmt-75d513914b7607b8.exe`std::panicking::try</text></g><g><title>stmt-75d513914b7607b8.exe`std::panicking::try::do_call (32 samples, 48.48%)</title><rect x="16.6667%" y="741" width="48.4848%" height="15" fill="rgb(239,221,27)" fg:x="11" fg:w="32"/><text x="16.9167%" y="751.50">stmt-75d513914b7607b8.exe`std::panicking::try::do_call</text></g><g><title>stmt-75d513914b7607b8.exe`std::rt::lang_start_internal::closure$2 (32 samples, 48.48%)</title><rect x="16.6667%" y="725" width="48.4848%" height="15" fill="rgb(222,198,25)" fg:x="11" fg:w="32"/><text x="16.9167%" y="735.50">stmt-75d513914b7607b8.exe`std::rt::lang_start_internal::closure$2</text></g><g><title>stmt-75d513914b7607b8.exe`std::panic::catch_unwind (32 samples, 48.48%)</title><rect x="16.6667%" y="709" width="48.4848%" height="15" fill="rgb(211,99,13)" fg:x="11" fg:w="32"/><text x="16.9167%" y="719.50">stmt-75d513914b7607b8.exe`std::panic::catch_unwind</text></g><g><title>stmt-75d513914b7607b8.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (32 samples, 48.48%)</title><rect x="16.6667%" y="693" width="48.4848%" height="15" fill="rgb(232,111,31)" fg:x="11" fg:w="32"/><text x="16.9167%" y="703.50">stmt-75d513914b7607b8.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lan..</text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (32 samples, 48.48%)</title><rect x="16.6667%" y="677" width="48.4848%" height="15" fill="rgb(245,82,37)" fg:x="11" fg:w="32"/><text x="16.9167%" y="687.50">stmt-75d513914b7607b8.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void..</text></g><g><title>stmt-75d513914b7607b8.exe`stmt::main (32 samples, 48.48%)</title><rect x="16.6667%" y="661" width="48.4848%" height="15" fill="rgb(227,149,46)" fg:x="11" fg:w="32"/><text x="16.9167%" y="671.50">stmt-75d513914b7607b8.exe`stmt::main</text></g><g><title>stmt-75d513914b7607b8.exe`stmt::benches (31 samples, 46.97%)</title><rect x="18.1818%" y="645" width="46.9697%" height="15" fill="rgb(218,36,50)" fg:x="12" fg:w="31"/><text x="18.4318%" y="655.50">stmt-75d513914b7607b8.exe`stmt::benches</text></g><g><title>stmt-75d513914b7607b8.exe`stmt::criterion_benchmark(criterion::Criterion (4 samples, 6.06%)</title><rect x="59.0909%" y="629" width="6.0606%" height="15" fill="rgb(226,80,48)" fg:x="39" fg:w="4"/><text x="59.3409%" y="639.50">stmt-75d..</text></g><g><title>stmt-75d513914b7607b8.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::bench_function&lt;criterion::measurement::WallTime,ref$&lt;str$&gt;,stmt::criterion_benchmark::closure_env$2&gt;(ref$ (1 samples, 1.52%)</title><rect x="63.6364%" y="613" width="1.5152%" height="15" fill="rgb(238,224,15)" fg:x="42" fg:w="1"/><text x="63.8864%" y="623.50"></text></g><g><title>stmt-75d513914b7607b8.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::run_bench(criterion::benchmark_group::BenchmarkId, tuple$&lt;&gt;*, criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,ref$ (1 samples, 1.52%)</title><rect x="63.6364%" y="597" width="1.5152%" height="15" fill="rgb(241,136,10)" fg:x="42" fg:w="1"/><text x="63.8864%" y="607.50"></text></g><g><title>stmt-75d513914b7607b8.exe`criterion::report::impl$5::test_start (1 samples, 1.52%)</title><rect x="63.6364%" y="581" width="1.5152%" height="15" fill="rgb(208,32,45)" fg:x="42" fg:w="1"/><text x="63.8864%" y="591.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::io::stdio::_print (1 samples, 1.52%)</title><rect x="63.6364%" y="565" width="1.5152%" height="15" fill="rgb(207,135,9)" fg:x="42" fg:w="1"/><text x="63.8864%" y="575.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::io::stdio::print_to (1 samples, 1.52%)</title><rect x="63.6364%" y="549" width="1.5152%" height="15" fill="rgb(206,86,44)" fg:x="42" fg:w="1"/><text x="63.8864%" y="559.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::io::stdio::impl$16::write_fmt (1 samples, 1.52%)</title><rect x="63.6364%" y="533" width="1.5152%" height="15" fill="rgb(245,177,15)" fg:x="42" fg:w="1"/><text x="63.8864%" y="543.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::io::Write::write_fmt (1 samples, 1.52%)</title><rect x="63.6364%" y="517" width="1.5152%" height="15" fill="rgb(206,64,50)" fg:x="42" fg:w="1"/><text x="63.8864%" y="527.50"></text></g><g><title>stmt-75d513914b7607b8.exe`core::fmt::write (1 samples, 1.52%)</title><rect x="63.6364%" y="501" width="1.5152%" height="15" fill="rgb(234,36,40)" fg:x="42" fg:w="1"/><text x="63.8864%" y="511.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (1 samples, 1.52%)</title><rect x="63.6364%" y="485" width="1.5152%" height="15" fill="rgb(213,64,8)" fg:x="42" fg:w="1"/><text x="63.8864%" y="495.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::io::stdio::impl$19::write_all (1 samples, 1.52%)</title><rect x="63.6364%" y="469" width="1.5152%" height="15" fill="rgb(210,75,36)" fg:x="42" fg:w="1"/><text x="63.8864%" y="479.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::sync::reentrant_lock::impl$11::deref (1 samples, 1.52%)</title><rect x="63.6364%" y="453" width="1.5152%" height="15" fill="rgb(229,88,21)" fg:x="42" fg:w="1"/><text x="63.8864%" y="463.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::io::buffered::linewritershim::impl$1::write_all (1 samples, 1.52%)</title><rect x="63.6364%" y="437" width="1.5152%" height="15" fill="rgb(252,204,47)" fg:x="42" fg:w="1"/><text x="63.8864%" y="447.50"></text></g><g><title>stmt-75d513914b7607b8.exe`core::result::impl$26::branch (1 samples, 1.52%)</title><rect x="63.6364%" y="421" width="1.5152%" height="15" fill="rgb(208,77,27)" fg:x="42" fg:w="1"/><text x="63.8864%" y="431.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (1 samples, 1.52%)</title><rect x="63.6364%" y="405" width="1.5152%" height="15" fill="rgb(221,76,26)" fg:x="42" fg:w="1"/><text x="63.8864%" y="415.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::io::stdio::impl$1::write (1 samples, 1.52%)</title><rect x="63.6364%" y="389" width="1.5152%" height="15" fill="rgb(225,139,18)" fg:x="42" fg:w="1"/><text x="63.8864%" y="399.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::io::stdio::handle_ebadf (1 samples, 1.52%)</title><rect x="63.6364%" y="373" width="1.5152%" height="15" fill="rgb(230,137,11)" fg:x="42" fg:w="1"/><text x="63.8864%" y="383.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::stdio::write (1 samples, 1.52%)</title><rect x="63.6364%" y="357" width="1.5152%" height="15" fill="rgb(212,28,1)" fg:x="42" fg:w="1"/><text x="63.8864%" y="367.50"></text></g><g><title>stmt-75d513914b7607b8.exe`std::sys::pal::windows::stdio::is_console (1 samples, 1.52%)</title><rect x="63.6364%" y="341" width="1.5152%" height="15" fill="rgb(248,164,17)" fg:x="42" fg:w="1"/><text x="63.8864%" y="351.50"></text></g><g><title>`0x7FF9FA30A6A2 (1 samples, 1.52%)</title><rect x="63.6364%" y="325" width="1.5152%" height="15" fill="rgb(222,171,42)" fg:x="42" fg:w="1"/><text x="63.8864%" y="335.50"></text></g><g><title>`0x7FF9FCD5F714 (1 samples, 1.52%)</title><rect x="63.6364%" y="309" width="1.5152%" height="15" fill="rgb(243,84,45)" fg:x="42" fg:w="1"/><text x="63.8864%" y="319.50"></text></g><g><title>`0x7FF9FCCF27EF (1 samples, 1.52%)</title><rect x="65.1515%" y="853" width="1.5152%" height="15" fill="rgb(252,49,23)" fg:x="43" fg:w="1"/><text x="65.4015%" y="863.50"></text></g><g><title>`0x7FF9FCCF2872 (1 samples, 1.52%)</title><rect x="65.1515%" y="837" width="1.5152%" height="15" fill="rgb(215,19,7)" fg:x="43" fg:w="1"/><text x="65.4015%" y="847.50"></text></g><g><title>`0x7FF9FCC1FE74 (1 samples, 1.52%)</title><rect x="65.1515%" y="821" width="1.5152%" height="15" fill="rgb(238,81,41)" fg:x="43" fg:w="1"/><text x="65.4015%" y="831.50"></text></g><g><title>`0x7FF9FCCD473C (1 samples, 1.52%)</title><rect x="66.6667%" y="821" width="1.5152%" height="15" fill="rgb(210,199,37)" fg:x="44" fg:w="1"/><text x="66.9167%" y="831.50"></text></g><g><title>`0x7FF9FCC0E2A6 (1 samples, 1.52%)</title><rect x="66.6667%" y="805" width="1.5152%" height="15" fill="rgb(244,192,49)" fg:x="44" fg:w="1"/><text x="66.9167%" y="815.50"></text></g><g><title>`0x7FF9FCC0E319 (1 samples, 1.52%)</title><rect x="66.6667%" y="789" width="1.5152%" height="15" fill="rgb(226,211,11)" fg:x="44" fg:w="1"/><text x="66.9167%" y="799.50"></text></g><g><title>`0x7FF9FCC0E3C2 (1 samples, 1.52%)</title><rect x="66.6667%" y="773" width="1.5152%" height="15" fill="rgb(236,162,54)" fg:x="44" fg:w="1"/><text x="66.9167%" y="783.50"></text></g><g><title>`0x7FF9FCCF3C17 (1 samples, 1.52%)</title><rect x="66.6667%" y="757" width="1.5152%" height="15" fill="rgb(220,229,9)" fg:x="44" fg:w="1"/><text x="66.9167%" y="767.50"></text></g><g><title>`0x7FF9FCCD4CF2 (1 samples, 1.52%)</title><rect x="68.1818%" y="821" width="1.5152%" height="15" fill="rgb(250,87,22)" fg:x="45" fg:w="1"/><text x="68.4318%" y="831.50"></text></g><g><title>`0x7FF9FCCA9D7B (1 samples, 1.52%)</title><rect x="68.1818%" y="805" width="1.5152%" height="15" fill="rgb(239,43,17)" fg:x="45" fg:w="1"/><text x="68.4318%" y="815.50"></text></g><g><title>`0x7FF9FCCA9E21 (1 samples, 1.52%)</title><rect x="68.1818%" y="789" width="1.5152%" height="15" fill="rgb(231,177,25)" fg:x="45" fg:w="1"/><text x="68.4318%" y="799.50"></text></g><g><title>`0x7FF9FCCA9F45 (1 samples, 1.52%)</title><rect x="68.1818%" y="773" width="1.5152%" height="15" fill="rgb(219,179,1)" fg:x="45" fg:w="1"/><text x="68.4318%" y="783.50"></text></g><g><title>`0x7FF9FCCAA08B (1 samples, 1.52%)</title><rect x="68.1818%" y="757" width="1.5152%" height="15" fill="rgb(238,219,53)" fg:x="45" fg:w="1"/><text x="68.4318%" y="767.50"></text></g><g><title>`0x7FF9FCCAA158 (1 samples, 1.52%)</title><rect x="68.1818%" y="741" width="1.5152%" height="15" fill="rgb(232,167,36)" fg:x="45" fg:w="1"/><text x="68.4318%" y="751.50"></text></g><g><title>`0x7FF9FCCA829B (1 samples, 1.52%)</title><rect x="68.1818%" y="725" width="1.5152%" height="15" fill="rgb(244,19,51)" fg:x="45" fg:w="1"/><text x="68.4318%" y="735.50"></text></g><g><title>`0x7FF9FCCA8504 (1 samples, 1.52%)</title><rect x="68.1818%" y="709" width="1.5152%" height="15" fill="rgb(224,6,22)" fg:x="45" fg:w="1"/><text x="68.4318%" y="719.50"></text></g><g><title>`0x7FF9FCD623E4 (1 samples, 1.52%)</title><rect x="68.1818%" y="693" width="1.5152%" height="15" fill="rgb(224,145,5)" fg:x="45" fg:w="1"/><text x="68.4318%" y="703.50"></text></g><g><title>`0x7FF9FCCD4E76 (1 samples, 1.52%)</title><rect x="69.6970%" y="821" width="1.5152%" height="15" fill="rgb(234,130,49)" fg:x="46" fg:w="1"/><text x="69.9470%" y="831.50"></text></g><g><title>`0x7FF9FCC9290E (1 samples, 1.52%)</title><rect x="69.6970%" y="805" width="1.5152%" height="15" fill="rgb(254,6,2)" fg:x="46" fg:w="1"/><text x="69.9470%" y="815.50"></text></g><g><title>`0x7FF9FCC27776 (1 samples, 1.52%)</title><rect x="69.6970%" y="789" width="1.5152%" height="15" fill="rgb(208,96,46)" fg:x="46" fg:w="1"/><text x="69.9470%" y="799.50"></text></g><g><title>`0x7FF9FCC27AFE (1 samples, 1.52%)</title><rect x="69.6970%" y="773" width="1.5152%" height="15" fill="rgb(239,3,39)" fg:x="46" fg:w="1"/><text x="69.9470%" y="783.50"></text></g><g><title>`0x7FF9FCC1007D (1 samples, 1.52%)</title><rect x="69.6970%" y="757" width="1.5152%" height="15" fill="rgb(233,210,1)" fg:x="46" fg:w="1"/><text x="69.9470%" y="767.50"></text></g><g><title>`0x7FF9FCCD5761 (1 samples, 1.52%)</title><rect x="71.2121%" y="821" width="1.5152%" height="15" fill="rgb(244,137,37)" fg:x="47" fg:w="1"/><text x="71.4621%" y="831.50"></text></g><g><title>`0x7FF9FCC020BF (1 samples, 1.52%)</title><rect x="71.2121%" y="805" width="1.5152%" height="15" fill="rgb(240,136,2)" fg:x="47" fg:w="1"/><text x="71.4621%" y="815.50"></text></g><g><title>`0x7FF9FCC01F30 (1 samples, 1.52%)</title><rect x="71.2121%" y="789" width="1.5152%" height="15" fill="rgb(239,18,37)" fg:x="47" fg:w="1"/><text x="71.4621%" y="799.50"></text></g><g><title>`0x7FF9FCD5FC94 (1 samples, 1.52%)</title><rect x="71.2121%" y="773" width="1.5152%" height="15" fill="rgb(218,185,22)" fg:x="47" fg:w="1"/><text x="71.4621%" y="783.50"></text></g><g><title>`0x7FF9FCC0892C (1 samples, 1.52%)</title><rect x="72.7273%" y="709" width="1.5152%" height="15" fill="rgb(225,218,4)" fg:x="48" fg:w="1"/><text x="72.9773%" y="719.50"></text></g><g><title>`0x7FF9FCC0947B (1 samples, 1.52%)</title><rect x="72.7273%" y="693" width="1.5152%" height="15" fill="rgb(230,182,32)" fg:x="48" fg:w="1"/><text x="72.9773%" y="703.50"></text></g><g><title>`0x7FF9FCC0AD6F (1 samples, 1.52%)</title><rect x="72.7273%" y="677" width="1.5152%" height="15" fill="rgb(242,56,43)" fg:x="48" fg:w="1"/><text x="72.9773%" y="687.50"></text></g><g><title>`0x7FF9FCC4C61E (1 samples, 1.52%)</title><rect x="74.2424%" y="693" width="1.5152%" height="15" fill="rgb(233,99,24)" fg:x="49" fg:w="1"/><text x="74.4924%" y="703.50"></text></g><g><title>`0x7FF9FCC4EE12 (1 samples, 1.52%)</title><rect x="74.2424%" y="677" width="1.5152%" height="15" fill="rgb(234,209,42)" fg:x="49" fg:w="1"/><text x="74.4924%" y="687.50"></text></g><g><title>`0x7FF9FCC4B032 (3 samples, 4.55%)</title><rect x="72.7273%" y="757" width="4.5455%" height="15" fill="rgb(227,7,12)" fg:x="48" fg:w="3"/><text x="72.9773%" y="767.50">`0x7F..</text></g><g><title>`0x7FF9FCC269A4 (3 samples, 4.55%)</title><rect x="72.7273%" y="741" width="4.5455%" height="15" fill="rgb(245,203,43)" fg:x="48" fg:w="3"/><text x="72.9773%" y="751.50">`0x7F..</text></g><g><title>`0x7FF9FCC070E1 (3 samples, 4.55%)</title><rect x="72.7273%" y="725" width="4.5455%" height="15" fill="rgb(238,205,33)" fg:x="48" fg:w="3"/><text x="72.9773%" y="735.50">`0x7F..</text></g><g><title>`0x7FF9FCC08999 (2 samples, 3.03%)</title><rect x="74.2424%" y="709" width="3.0303%" height="15" fill="rgb(231,56,7)" fg:x="49" fg:w="2"/><text x="74.4924%" y="719.50">`0x..</text></g><g><title>`0x7FF9FCC4C792 (1 samples, 1.52%)</title><rect x="75.7576%" y="693" width="1.5152%" height="15" fill="rgb(244,186,29)" fg:x="50" fg:w="1"/><text x="76.0076%" y="703.50"></text></g><g><title>`0x7FF9FCC54595 (1 samples, 1.52%)</title><rect x="75.7576%" y="677" width="1.5152%" height="15" fill="rgb(234,111,31)" fg:x="50" fg:w="1"/><text x="76.0076%" y="687.50"></text></g><g><title>`0x7FF9FCCD2F1F (1 samples, 1.52%)</title><rect x="77.2727%" y="741" width="1.5152%" height="15" fill="rgb(241,149,10)" fg:x="51" fg:w="1"/><text x="77.5227%" y="751.50"></text></g><g><title>`0x7FF9FCCD303F (1 samples, 1.52%)</title><rect x="77.2727%" y="725" width="1.5152%" height="15" fill="rgb(249,206,44)" fg:x="51" fg:w="1"/><text x="77.5227%" y="735.50"></text></g><g><title>`0x7FF9FCCD3005 (1 samples, 1.52%)</title><rect x="77.2727%" y="709" width="1.5152%" height="15" fill="rgb(251,153,30)" fg:x="51" fg:w="1"/><text x="77.5227%" y="719.50"></text></g><g><title>`0x7FF9FCC0873B (1 samples, 1.52%)</title><rect x="77.2727%" y="693" width="1.5152%" height="15" fill="rgb(239,152,38)" fg:x="51" fg:w="1"/><text x="77.5227%" y="703.50"></text></g><g><title>`0x7FF9FCC07F85 (1 samples, 1.52%)</title><rect x="77.2727%" y="677" width="1.5152%" height="15" fill="rgb(249,139,47)" fg:x="51" fg:w="1"/><text x="77.5227%" y="687.50"></text></g><g><title>`0x7FF9FCC07ABD (1 samples, 1.52%)</title><rect x="77.2727%" y="661" width="1.5152%" height="15" fill="rgb(244,64,35)" fg:x="51" fg:w="1"/><text x="77.5227%" y="671.50"></text></g><g><title>`0x7FF9FCD5FFB4 (1 samples, 1.52%)</title><rect x="77.2727%" y="645" width="1.5152%" height="15" fill="rgb(216,46,15)" fg:x="51" fg:w="1"/><text x="77.5227%" y="655.50"></text></g><g><title>`0x7FF9FCCD32AA (1 samples, 1.52%)</title><rect x="78.7879%" y="725" width="1.5152%" height="15" fill="rgb(250,74,19)" fg:x="52" fg:w="1"/><text x="79.0379%" y="735.50"></text></g><g><title>`0x7FF9FCC1CC0C (1 samples, 1.52%)</title><rect x="78.7879%" y="709" width="1.5152%" height="15" fill="rgb(249,42,33)" fg:x="52" fg:w="1"/><text x="79.0379%" y="719.50"></text></g><g><title>`0x7FF9FCC1D860 (1 samples, 1.52%)</title><rect x="78.7879%" y="693" width="1.5152%" height="15" fill="rgb(242,149,17)" fg:x="52" fg:w="1"/><text x="79.0379%" y="703.50"></text></g><g><title>`0x7FF9FB7CD430 (1 samples, 1.52%)</title><rect x="78.7879%" y="677" width="1.5152%" height="15" fill="rgb(244,29,21)" fg:x="52" fg:w="1"/><text x="79.0379%" y="687.50"></text></g><g><title>`0x7FF9FA25859D (1 samples, 1.52%)</title><rect x="80.3030%" y="645" width="1.5152%" height="15" fill="rgb(220,130,37)" fg:x="53" fg:w="1"/><text x="80.5530%" y="655.50"></text></g><g><title>`0x7FF9FA316BCF (1 samples, 1.52%)</title><rect x="80.3030%" y="629" width="1.5152%" height="15" fill="rgb(211,67,2)" fg:x="53" fg:w="1"/><text x="80.5530%" y="639.50"></text></g><g><title>`0x7FF9FCCEE71C (1 samples, 1.52%)</title><rect x="80.3030%" y="613" width="1.5152%" height="15" fill="rgb(235,68,52)" fg:x="53" fg:w="1"/><text x="80.5530%" y="623.50"></text></g><g><title>`0x7FF9FCCEE852 (1 samples, 1.52%)</title><rect x="80.3030%" y="597" width="1.5152%" height="15" fill="rgb(246,142,3)" fg:x="53" fg:w="1"/><text x="80.5530%" y="607.50"></text></g><g><title>`0x7FF9FCD630E4 (1 samples, 1.52%)</title><rect x="80.3030%" y="581" width="1.5152%" height="15" fill="rgb(241,25,7)" fg:x="53" fg:w="1"/><text x="80.5530%" y="591.50"></text></g><g><title>`0x7FF9FA336E2D (2 samples, 3.03%)</title><rect x="80.3030%" y="661" width="3.0303%" height="15" fill="rgb(242,119,39)" fg:x="53" fg:w="2"/><text x="80.5530%" y="671.50">`0x..</text></g><g><title>`0x7FF9FA25895E (1 samples, 1.52%)</title><rect x="81.8182%" y="645" width="1.5152%" height="15" fill="rgb(241,98,45)" fg:x="54" fg:w="1"/><text x="82.0682%" y="655.50"></text></g><g><title>`0x7FF9FA255E20 (1 samples, 1.52%)</title><rect x="81.8182%" y="629" width="1.5152%" height="15" fill="rgb(254,28,30)" fg:x="54" fg:w="1"/><text x="82.0682%" y="639.50"></text></g><g><title>`0x7FF9FA312C75 (1 samples, 1.52%)</title><rect x="81.8182%" y="613" width="1.5152%" height="15" fill="rgb(241,142,54)" fg:x="54" fg:w="1"/><text x="82.0682%" y="623.50"></text></g><g><title>`0x7FF9FCC27776 (1 samples, 1.52%)</title><rect x="81.8182%" y="597" width="1.5152%" height="15" fill="rgb(222,85,15)" fg:x="54" fg:w="1"/><text x="82.0682%" y="607.50"></text></g><g><title>`0x7FF9FCC27AFE (1 samples, 1.52%)</title><rect x="81.8182%" y="581" width="1.5152%" height="15" fill="rgb(210,85,47)" fg:x="54" fg:w="1"/><text x="82.0682%" y="591.50"></text></g><g><title>`0x7FF9FCC109B0 (1 samples, 1.52%)</title><rect x="81.8182%" y="565" width="1.5152%" height="15" fill="rgb(224,206,25)" fg:x="54" fg:w="1"/><text x="82.0682%" y="575.50"></text></g><g><title>`0x7FF9FCC11EDF (1 samples, 1.52%)</title><rect x="81.8182%" y="549" width="1.5152%" height="15" fill="rgb(243,201,19)" fg:x="54" fg:w="1"/><text x="82.0682%" y="559.50"></text></g><g><title>`0x7FF9FCC12854 (1 samples, 1.52%)</title><rect x="81.8182%" y="533" width="1.5152%" height="15" fill="rgb(236,59,4)" fg:x="54" fg:w="1"/><text x="82.0682%" y="543.50"></text></g><g><title>`0x7FF9FCC1238A (1 samples, 1.52%)</title><rect x="81.8182%" y="517" width="1.5152%" height="15" fill="rgb(254,179,45)" fg:x="54" fg:w="1"/><text x="82.0682%" y="527.50"></text></g><g><title>`0x7FF9FCCCE0A0 (8 samples, 12.12%)</title><rect x="72.7273%" y="805" width="12.1212%" height="15" fill="rgb(226,14,10)" fg:x="48" fg:w="8"/><text x="72.9773%" y="815.50">`0x7FF9FCCCE0A0</text></g><g><title>`0x7FF9FCC566C0 (8 samples, 12.12%)</title><rect x="72.7273%" y="789" width="12.1212%" height="15" fill="rgb(244,27,41)" fg:x="48" fg:w="8"/><text x="72.9773%" y="799.50">`0x7FF9FCC566C0</text></g><g><title>`0x7FF9FCC4ACD0 (8 samples, 12.12%)</title><rect x="72.7273%" y="773" width="12.1212%" height="15" fill="rgb(235,35,32)" fg:x="48" fg:w="8"/><text x="72.9773%" y="783.50">`0x7FF9FCC4ACD0</text></g><g><title>`0x7FF9FCC4B0C4 (5 samples, 7.58%)</title><rect x="77.2727%" y="757" width="7.5758%" height="15" fill="rgb(218,68,31)" fg:x="51" fg:w="5"/><text x="77.5227%" y="767.50">`0x7FF9FCC..</text></g><g><title>`0x7FF9FCCD2F93 (4 samples, 6.06%)</title><rect x="78.7879%" y="741" width="6.0606%" height="15" fill="rgb(207,120,37)" fg:x="52" fg:w="4"/><text x="79.0379%" y="751.50">`0x7FF9F..</text></g><g><title>`0x7FF9FCCD32D6 (3 samples, 4.55%)</title><rect x="80.3030%" y="725" width="4.5455%" height="15" fill="rgb(227,98,0)" fg:x="53" fg:w="3"/><text x="80.5530%" y="735.50">`0x7F..</text></g><g><title>`0x7FF9FCCD32AA (3 samples, 4.55%)</title><rect x="80.3030%" y="709" width="4.5455%" height="15" fill="rgb(207,7,3)" fg:x="53" fg:w="3"/><text x="80.5530%" y="719.50">`0x7F..</text></g><g><title>`0x7FF9FCC1CC0C (3 samples, 4.55%)</title><rect x="80.3030%" y="693" width="4.5455%" height="15" fill="rgb(206,98,19)" fg:x="53" fg:w="3"/><text x="80.5530%" y="703.50">`0x7F..</text></g><g><title>`0x7FF9FCC1D860 (3 samples, 4.55%)</title><rect x="80.3030%" y="677" width="4.5455%" height="15" fill="rgb(217,5,26)" fg:x="53" fg:w="3"/><text x="80.5530%" y="687.50">`0x7F..</text></g><g><title>`0x7FF9FA336E91 (1 samples, 1.52%)</title><rect x="83.3333%" y="661" width="1.5152%" height="15" fill="rgb(235,190,38)" fg:x="55" fg:w="1"/><text x="83.5833%" y="671.50"></text></g><g><title>`0x7FF9FA2F192E (1 samples, 1.52%)</title><rect x="83.3333%" y="645" width="1.5152%" height="15" fill="rgb(247,86,24)" fg:x="55" fg:w="1"/><text x="83.5833%" y="655.50"></text></g><g><title>`0x7FF9FA2F221F (1 samples, 1.52%)</title><rect x="83.3333%" y="629" width="1.5152%" height="15" fill="rgb(205,101,16)" fg:x="55" fg:w="1"/><text x="83.5833%" y="639.50"></text></g><g><title>`0x7FF9FA324FA2 (1 samples, 1.52%)</title><rect x="83.3333%" y="613" width="1.5152%" height="15" fill="rgb(246,168,33)" fg:x="55" fg:w="1"/><text x="83.5833%" y="623.50"></text></g><g><title>`0x7FF9FA28F9AB (1 samples, 1.52%)</title><rect x="83.3333%" y="597" width="1.5152%" height="15" fill="rgb(231,114,1)" fg:x="55" fg:w="1"/><text x="83.5833%" y="607.50"></text></g><g><title>`0x7FF9FA28FA7B (1 samples, 1.52%)</title><rect x="83.3333%" y="581" width="1.5152%" height="15" fill="rgb(207,184,53)" fg:x="55" fg:w="1"/><text x="83.5833%" y="591.50"></text></g><g><title>`0x7FF9FA29101D (1 samples, 1.52%)</title><rect x="83.3333%" y="565" width="1.5152%" height="15" fill="rgb(224,95,51)" fg:x="55" fg:w="1"/><text x="83.5833%" y="575.50"></text></g><g><title>`0x7FF9FA290BE9 (1 samples, 1.52%)</title><rect x="83.3333%" y="549" width="1.5152%" height="15" fill="rgb(212,188,45)" fg:x="55" fg:w="1"/><text x="83.5833%" y="559.50"></text></g><g><title>`0x7FF9FA2914EB (1 samples, 1.52%)</title><rect x="83.3333%" y="533" width="1.5152%" height="15" fill="rgb(223,154,38)" fg:x="55" fg:w="1"/><text x="83.5833%" y="543.50"></text></g><g><title>`0x7FF9FCD60F04 (1 samples, 1.52%)</title><rect x="83.3333%" y="517" width="1.5152%" height="15" fill="rgb(251,22,52)" fg:x="55" fg:w="1"/><text x="83.5833%" y="527.50"></text></g><g><title>`0x7FF9FCCD5BD5 (9 samples, 13.64%)</title><rect x="72.7273%" y="821" width="13.6364%" height="15" fill="rgb(229,209,22)" fg:x="48" fg:w="9"/><text x="72.9773%" y="831.50">`0x7FF9FCCD5BD5</text></g><g><title>`0x7FF9FCCCE115 (1 samples, 1.52%)</title><rect x="84.8485%" y="805" width="1.5152%" height="15" fill="rgb(234,138,34)" fg:x="56" fg:w="1"/><text x="85.0985%" y="815.50"></text></g><g><title>`0x7FF9FCC0A118 (1 samples, 1.52%)</title><rect x="84.8485%" y="789" width="1.5152%" height="15" fill="rgb(212,95,11)" fg:x="56" fg:w="1"/><text x="85.0985%" y="799.50"></text></g><g><title>`0x7FF9FCC0AA7B (1 samples, 1.52%)</title><rect x="84.8485%" y="773" width="1.5152%" height="15" fill="rgb(240,179,47)" fg:x="56" fg:w="1"/><text x="85.0985%" y="783.50"></text></g><g><title>`0x7FF9FCC0AB90 (1 samples, 1.52%)</title><rect x="84.8485%" y="757" width="1.5152%" height="15" fill="rgb(240,163,11)" fg:x="56" fg:w="1"/><text x="85.0985%" y="767.50"></text></g><g><title>`0x7FF9FCC0CCB2 (1 samples, 1.52%)</title><rect x="84.8485%" y="741" width="1.5152%" height="15" fill="rgb(236,37,12)" fg:x="56" fg:w="1"/><text x="85.0985%" y="751.50"></text></g><g><title>`0x7FF9FCC5540C (1 samples, 1.52%)</title><rect x="84.8485%" y="725" width="1.5152%" height="15" fill="rgb(232,164,16)" fg:x="56" fg:w="1"/><text x="85.0985%" y="735.50"></text></g><g><title>`0x7FF9FCC4C35E (1 samples, 1.52%)</title><rect x="86.3636%" y="805" width="1.5152%" height="15" fill="rgb(244,205,15)" fg:x="57" fg:w="1"/><text x="86.6136%" y="815.50"></text></g><g><title>`0x7FF9FCC0B4D0 (1 samples, 1.52%)</title><rect x="86.3636%" y="789" width="1.5152%" height="15" fill="rgb(223,117,47)" fg:x="57" fg:w="1"/><text x="86.6136%" y="799.50"></text></g><g><title>`0x7FF9FCC4C3DB (1 samples, 1.52%)</title><rect x="87.8788%" y="741" width="1.5152%" height="15" fill="rgb(244,107,35)" fg:x="58" fg:w="1"/><text x="88.1288%" y="751.50"></text></g><g><title>`0x7FF9FCCF34A1 (1 samples, 1.52%)</title><rect x="87.8788%" y="725" width="1.5152%" height="15" fill="rgb(205,140,8)" fg:x="58" fg:w="1"/><text x="88.1288%" y="735.50"></text></g><g><title>`0x7FF9FCD61964 (1 samples, 1.52%)</title><rect x="87.8788%" y="709" width="1.5152%" height="15" fill="rgb(228,84,46)" fg:x="58" fg:w="1"/><text x="88.1288%" y="719.50"></text></g><g><title>`0x7FF9FCCD5CC9 (3 samples, 4.55%)</title><rect x="86.3636%" y="821" width="4.5455%" height="15" fill="rgb(254,188,9)" fg:x="57" fg:w="3"/><text x="86.6136%" y="831.50">`0x7F..</text></g><g><title>`0x7FF9FCC4C61E (2 samples, 3.03%)</title><rect x="87.8788%" y="805" width="3.0303%" height="15" fill="rgb(206,112,54)" fg:x="58" fg:w="2"/><text x="88.1288%" y="815.50">`0x..</text></g><g><title>`0x7FF9FCC4E3DC (2 samples, 3.03%)</title><rect x="87.8788%" y="789" width="3.0303%" height="15" fill="rgb(216,84,49)" fg:x="58" fg:w="2"/><text x="88.1288%" y="799.50">`0x..</text></g><g><title>`0x7FF9FCC070E1 (2 samples, 3.03%)</title><rect x="87.8788%" y="773" width="3.0303%" height="15" fill="rgb(214,194,35)" fg:x="58" fg:w="2"/><text x="88.1288%" y="783.50">`0x..</text></g><g><title>`0x7FF9FCC08999 (2 samples, 3.03%)</title><rect x="87.8788%" y="757" width="3.0303%" height="15" fill="rgb(249,28,3)" fg:x="58" fg:w="2"/><text x="88.1288%" y="767.50">`0x..</text></g><g><title>`0x7FF9FCC4C61E (1 samples, 1.52%)</title><rect x="89.3939%" y="741" width="1.5152%" height="15" fill="rgb(222,56,52)" fg:x="59" fg:w="1"/><text x="89.6439%" y="751.50"></text></g><g><title>`0x7FF9FCC4E3DC (1 samples, 1.52%)</title><rect x="89.3939%" y="725" width="1.5152%" height="15" fill="rgb(245,217,50)" fg:x="59" fg:w="1"/><text x="89.6439%" y="735.50"></text></g><g><title>`0x7FF9FCC070E1 (1 samples, 1.52%)</title><rect x="89.3939%" y="709" width="1.5152%" height="15" fill="rgb(213,201,24)" fg:x="59" fg:w="1"/><text x="89.6439%" y="719.50"></text></g><g><title>`0x7FF9FCC0884E (1 samples, 1.52%)</title><rect x="89.3939%" y="693" width="1.5152%" height="15" fill="rgb(248,116,28)" fg:x="59" fg:w="1"/><text x="89.6439%" y="703.50"></text></g><g><title>`0x7FF9FCC08D1A (1 samples, 1.52%)</title><rect x="89.3939%" y="677" width="1.5152%" height="15" fill="rgb(219,72,43)" fg:x="59" fg:w="1"/><text x="89.6439%" y="687.50"></text></g><g><title>`0x7FF9FCD5FB34 (1 samples, 1.52%)</title><rect x="89.3939%" y="661" width="1.5152%" height="15" fill="rgb(209,138,14)" fg:x="59" fg:w="1"/><text x="89.6439%" y="671.50"></text></g><g><title>`0x7FF9FCC04531 (1 samples, 1.52%)</title><rect x="90.9091%" y="773" width="1.5152%" height="15" fill="rgb(222,18,33)" fg:x="60" fg:w="1"/><text x="91.1591%" y="783.50"></text></g><g><title>`0x7FF9FCC04C09 (1 samples, 1.52%)</title><rect x="90.9091%" y="757" width="1.5152%" height="15" fill="rgb(213,199,7)" fg:x="60" fg:w="1"/><text x="91.1591%" y="767.50"></text></g><g><title>`0x7FF9FCC05367 (1 samples, 1.52%)</title><rect x="90.9091%" y="741" width="1.5152%" height="15" fill="rgb(250,110,10)" fg:x="60" fg:w="1"/><text x="91.1591%" y="751.50"></text></g><g><title>`0x7FF9FCC24A86 (1 samples, 1.52%)</title><rect x="90.9091%" y="725" width="1.5152%" height="15" fill="rgb(248,123,6)" fg:x="60" fg:w="1"/><text x="91.1591%" y="735.50"></text></g><g><title>`0x7FF9FCC24EE9 (1 samples, 1.52%)</title><rect x="90.9091%" y="709" width="1.5152%" height="15" fill="rgb(206,91,31)" fg:x="60" fg:w="1"/><text x="91.1591%" y="719.50"></text></g><g><title>`0x7FF9FCD252A1 (1 samples, 1.52%)</title><rect x="90.9091%" y="693" width="1.5152%" height="15" fill="rgb(211,154,13)" fg:x="60" fg:w="1"/><text x="91.1591%" y="703.50"></text></g><g><title>`0x7FF9FCD25328 (1 samples, 1.52%)</title><rect x="90.9091%" y="677" width="1.5152%" height="15" fill="rgb(225,148,7)" fg:x="60" fg:w="1"/><text x="91.1591%" y="687.50"></text></g><g><title>`0x7FF9FCD2BD5F (1 samples, 1.52%)</title><rect x="90.9091%" y="661" width="1.5152%" height="15" fill="rgb(220,160,43)" fg:x="60" fg:w="1"/><text x="91.1591%" y="671.50"></text></g><g><title>`0x7FF9FCD2EB69 (1 samples, 1.52%)</title><rect x="90.9091%" y="645" width="1.5152%" height="15" fill="rgb(213,52,39)" fg:x="60" fg:w="1"/><text x="91.1591%" y="655.50"></text></g><g><title>`0x7FF9FCCCD886 (1 samples, 1.52%)</title><rect x="90.9091%" y="629" width="1.5152%" height="15" fill="rgb(243,137,7)" fg:x="60" fg:w="1"/><text x="91.1591%" y="639.50"></text></g><g><title>`0x7FF9FCCD5CD0 (2 samples, 3.03%)</title><rect x="90.9091%" y="821" width="3.0303%" height="15" fill="rgb(230,79,13)" fg:x="60" fg:w="2"/><text x="91.1591%" y="831.50">`0x..</text></g><g><title>`0x7FF9FCC041D7 (2 samples, 3.03%)</title><rect x="90.9091%" y="805" width="3.0303%" height="15" fill="rgb(247,105,23)" fg:x="60" fg:w="2"/><text x="91.1591%" y="815.50">`0x..</text></g><g><title>`0x7FF9FCC0428A (2 samples, 3.03%)</title><rect x="90.9091%" y="789" width="3.0303%" height="15" fill="rgb(223,179,41)" fg:x="60" fg:w="2"/><text x="91.1591%" y="799.50">`0x..</text></g><g><title>`0x7FF9FCC0465C (1 samples, 1.52%)</title><rect x="92.4242%" y="773" width="1.5152%" height="15" fill="rgb(218,9,34)" fg:x="61" fg:w="1"/><text x="92.6742%" y="783.50"></text></g><g><title>`0x7FF9FCC05AB9 (1 samples, 1.52%)</title><rect x="92.4242%" y="757" width="1.5152%" height="15" fill="rgb(222,106,8)" fg:x="61" fg:w="1"/><text x="92.6742%" y="767.50"></text></g><g><title>`0x7FF9FCD5F814 (1 samples, 1.52%)</title><rect x="92.4242%" y="741" width="1.5152%" height="15" fill="rgb(211,220,0)" fg:x="61" fg:w="1"/><text x="92.6742%" y="751.50"></text></g><g><title>`0x7FF9FA0F8562 (1 samples, 1.52%)</title><rect x="93.9394%" y="741" width="1.5152%" height="15" fill="rgb(229,52,16)" fg:x="62" fg:w="1"/><text x="94.1894%" y="751.50"></text></g><g><title>`0x7FF9FA0F88D4 (1 samples, 1.52%)</title><rect x="93.9394%" y="725" width="1.5152%" height="15" fill="rgb(212,155,18)" fg:x="62" fg:w="1"/><text x="94.1894%" y="735.50"></text></g><g><title>`0x7FF9FA0E7AB7 (1 samples, 1.52%)</title><rect x="93.9394%" y="709" width="1.5152%" height="15" fill="rgb(242,21,14)" fg:x="62" fg:w="1"/><text x="94.1894%" y="719.50"></text></g><g><title>`0x7FF9FA0FC1AE (1 samples, 1.52%)</title><rect x="93.9394%" y="693" width="1.5152%" height="15" fill="rgb(222,19,48)" fg:x="62" fg:w="1"/><text x="94.1894%" y="703.50"></text></g><g><title>`0x7FF9FB7C28B0 (1 samples, 1.52%)</title><rect x="93.9394%" y="677" width="1.5152%" height="15" fill="rgb(232,45,27)" fg:x="62" fg:w="1"/><text x="94.1894%" y="687.50"></text></g><g><title>`0x7FF9FCCD32AA (2 samples, 3.03%)</title><rect x="93.9394%" y="789" width="3.0303%" height="15" fill="rgb(249,103,42)" fg:x="62" fg:w="2"/><text x="94.1894%" y="799.50">`0x..</text></g><g><title>`0x7FF9FCC1CC0C (2 samples, 3.03%)</title><rect x="93.9394%" y="773" width="3.0303%" height="15" fill="rgb(246,81,33)" fg:x="62" fg:w="2"/><text x="94.1894%" y="783.50">`0x..</text></g><g><title>`0x7FF9FCC1D860 (2 samples, 3.03%)</title><rect x="93.9394%" y="757" width="3.0303%" height="15" fill="rgb(252,33,42)" fg:x="62" fg:w="2"/><text x="94.1894%" y="767.50">`0x..</text></g><g><title>`0x7FF9FAB9180A (1 samples, 1.52%)</title><rect x="95.4545%" y="741" width="1.5152%" height="15" fill="rgb(209,212,41)" fg:x="63" fg:w="1"/><text x="95.7045%" y="751.50"></text></g><g><title>`0x7FF9FAB61629 (1 samples, 1.52%)</title><rect x="95.4545%" y="725" width="1.5152%" height="15" fill="rgb(207,154,6)" fg:x="63" fg:w="1"/><text x="95.7045%" y="735.50"></text></g><g><title>`0x7FF9FAB61C4B (1 samples, 1.52%)</title><rect x="95.4545%" y="709" width="1.5152%" height="15" fill="rgb(223,64,47)" fg:x="63" fg:w="1"/><text x="95.7045%" y="719.50"></text></g><g><title>`0x7FF9FCCEE71C (1 samples, 1.52%)</title><rect x="95.4545%" y="693" width="1.5152%" height="15" fill="rgb(211,161,38)" fg:x="63" fg:w="1"/><text x="95.7045%" y="703.50"></text></g><g><title>`0x7FF9FCCEE852 (1 samples, 1.52%)</title><rect x="95.4545%" y="677" width="1.5152%" height="15" fill="rgb(219,138,40)" fg:x="63" fg:w="1"/><text x="95.7045%" y="687.50"></text></g><g><title>`0x7FF9FCD630E4 (1 samples, 1.52%)</title><rect x="95.4545%" y="661" width="1.5152%" height="15" fill="rgb(241,228,46)" fg:x="63" fg:w="1"/><text x="95.7045%" y="671.50"></text></g><g><title>`0x7FF9FA612589 (1 samples, 1.52%)</title><rect x="96.9697%" y="693" width="1.5152%" height="15" fill="rgb(223,209,38)" fg:x="64" fg:w="1"/><text x="97.2197%" y="703.50"></text></g><g><title>`0x7FF9FA613CC0 (1 samples, 1.52%)</title><rect x="96.9697%" y="677" width="1.5152%" height="15" fill="rgb(236,164,45)" fg:x="64" fg:w="1"/><text x="97.2197%" y="687.50"></text></g><g><title>`0x7FF9FA613989 (1 samples, 1.52%)</title><rect x="96.9697%" y="661" width="1.5152%" height="15" fill="rgb(231,15,5)" fg:x="64" fg:w="1"/><text x="97.2197%" y="671.50"></text></g><g><title>all (66 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(252,35,15)" fg:x="0" fg:w="66"/><text x="0.2500%" y="895.50"></text></g><g><title>`0x7FF9FCCF27AE (23 samples, 34.85%)</title><rect x="65.1515%" y="869" width="34.8485%" height="15" fill="rgb(248,181,18)" fg:x="43" fg:w="23"/><text x="65.4015%" y="879.50">`0x7FF9FCCF27AE</text></g><g><title>`0x7FF9FCD1F023 (22 samples, 33.33%)</title><rect x="66.6667%" y="853" width="33.3333%" height="15" fill="rgb(233,39,42)" fg:x="44" fg:w="22"/><text x="66.9167%" y="863.50">`0x7FF9FCD1F023</text></g><g><title>`0x7FF9FCCD3FD0 (22 samples, 33.33%)</title><rect x="66.6667%" y="837" width="33.3333%" height="15" fill="rgb(238,110,33)" fg:x="44" fg:w="22"/><text x="66.9167%" y="847.50">`0x7FF9FCCD3FD0</text></g><g><title>`0x7FF9FCCD5DD9 (4 samples, 6.06%)</title><rect x="93.9394%" y="821" width="6.0606%" height="15" fill="rgb(233,195,10)" fg:x="62" fg:w="4"/><text x="94.1894%" y="831.50">`0x7FF9F..</text></g><g><title>`0x7FF9FCCD32D6 (4 samples, 6.06%)</title><rect x="93.9394%" y="805" width="6.0606%" height="15" fill="rgb(254,105,3)" fg:x="62" fg:w="4"/><text x="94.1894%" y="815.50">`0x7FF9F..</text></g><g><title>`0x7FF9FCCD32D6 (2 samples, 3.03%)</title><rect x="96.9697%" y="789" width="3.0303%" height="15" fill="rgb(221,225,9)" fg:x="64" fg:w="2"/><text x="97.2197%" y="799.50">`0x..</text></g><g><title>`0x7FF9FCCD32AA (2 samples, 3.03%)</title><rect x="96.9697%" y="773" width="3.0303%" height="15" fill="rgb(224,227,45)" fg:x="64" fg:w="2"/><text x="97.2197%" y="783.50">`0x..</text></g><g><title>`0x7FF9FCC1CC0C (2 samples, 3.03%)</title><rect x="96.9697%" y="757" width="3.0303%" height="15" fill="rgb(229,198,43)" fg:x="64" fg:w="2"/><text x="97.2197%" y="767.50">`0x..</text></g><g><title>`0x7FF9FCC1D860 (2 samples, 3.03%)</title><rect x="96.9697%" y="741" width="3.0303%" height="15" fill="rgb(206,209,35)" fg:x="64" fg:w="2"/><text x="97.2197%" y="751.50">`0x..</text></g><g><title>`0x7FF9FA5F5056 (2 samples, 3.03%)</title><rect x="96.9697%" y="725" width="3.0303%" height="15" fill="rgb(245,195,53)" fg:x="64" fg:w="2"/><text x="97.2197%" y="735.50">`0x..</text></g><g><title>`0x7FF9FA64C576 (2 samples, 3.03%)</title><rect x="96.9697%" y="709" width="3.0303%" height="15" fill="rgb(240,92,26)" fg:x="64" fg:w="2"/><text x="97.2197%" y="719.50">`0x..</text></g><g><title>`0x7FF9FA667702 (1 samples, 1.52%)</title><rect x="98.4848%" y="693" width="1.5152%" height="15" fill="rgb(207,40,23)" fg:x="65" fg:w="1"/><text x="98.7348%" y="703.50"></text></g><g><title>`0x7FF9FA5E736F (1 samples, 1.52%)</title><rect x="98.4848%" y="677" width="1.5152%" height="15" fill="rgb(223,111,35)" fg:x="65" fg:w="1"/><text x="98.7348%" y="687.50"></text></g><g><title>`0x7FF9FA5F5808 (1 samples, 1.52%)</title><rect x="98.4848%" y="661" width="1.5152%" height="15" fill="rgb(229,147,28)" fg:x="65" fg:w="1"/><text x="98.7348%" y="671.50"></text></g><g><title>`0x7FF9FA5FB880 (1 samples, 1.52%)</title><rect x="98.4848%" y="645" width="1.5152%" height="15" fill="rgb(211,29,28)" fg:x="65" fg:w="1"/><text x="98.7348%" y="655.50"></text></g></svg></svg>